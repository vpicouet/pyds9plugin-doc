{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyDS9plugin is the first open source pythonic SAOImageDS9 quick look plugin. It can be found on GitHub . Its goal is three-fold: Pushing the DS9 visualization application a step further by combining it to image processing tools Boosting the way we interact with scientific images in a quantitative way Catalyze community collaboration and code enhancement by providing a first extensive package gathering a glimpse of all the possibilities that offers DS9 extensibility Table of content User Guide Installation Tutorials Important features All the functions About Development philosophy Concept and implementation License","title":"Home"},{"location":"#table-of-content","text":"","title":"Table of content"},{"location":"#user-guide","text":"Installation Tutorials Important features All the functions","title":"User Guide"},{"location":"#about","text":"Development philosophy Concept and implementation License","title":"About"},{"location":"concept/","text":"A Pythonic package For all the reasons cited above, we decided to create the first Pythonic DS9 plugin: pyds9plugin . It is a public domain DS9 extension for quick-look image processing. It aims to extract quantifiable information from imaging datasets with improved interaction. The plugin processing functions can then be generalized automatically to a set of images to turn the quick-look tool into a multiprocessing pipeline. It enables new users, from undergraduate students to full-time researchers, to actively interact (process, model, plot, etc.) with astronomical image data with one integrated software package. This package, available both on Pypi and GitHub , has been extensively used within the FIREBall project and for CLAUDS catalogs generation. Before going any further, I highly recommend watching this youtube video for a better understanding of the package. The other videos that are linked in the document to present some functionality are all gathered here . The way it works DS9 incorporates the possibility to load extensions via an analysis file . When the plugin is installed and the analysis file loaded into the DS9 analysis menu, the extension can be used. The analysis file is the interface linking DS9 GUI with the plugin's functions. This file determines what menu is created within DS9 , what parameters windows each function launches, and what Shell command is interpreted. An example parameter window is shown in next Figure. Each pyds9plugin function is stored under DS9Utils access point, which links to pyds9plugin.DS9Utils module. Then command lines begin by DS9Utils followed by the function to be called and its arguments. pyds9plugin will then communicate, control, and exchange data with DS9 GUI via pyds9 package. The way the extension operates is illustrated in next. Diagram representing the way the plugin is loaded within DS9 and called. pyds9plugin can be called from the terminal (through command lines) which bypasses the need for DS9 GUI. Communication Within the DS9 program, the XPA (X Public Access) messaging system has been designed to provide seamless communication between DS9 GUI and other Unix programs (Perl, Tcl/Tk). It also provides an easy way for users to communicate with DS9 by executing XPA client shell commands. The pyds9 module uses a Python interface for XPA to communicate with DS9 . It supports communication with all of DS9 's XPA access points in two ways. It enables read and write access to all DS9 parameters, which allows controlling the display (load images, display NumPy arrays and catalogs, change parameters, create regions / DS9 plots, etc.). One interest in using Python is to use the full capability of its famous packages such as matplotlib , which offers other possibilities than the DS9 native plotting GUI. SExtractor parameters window allows to show the different parameter possibilities offered by DS9 . In addition to different menu types (entry, menu, and checkboxes, file system browser), the addition of tabs allows navigating through an important number of organized parameters. Running a function All the functions are directly accessible from DS9 GUI (within the analysis menu). Accessing a function will make appear a parameter window that will then call the plugin. Navigating through the list of DS9Utils functions can be quite cumbersome for newcomers. OSX built-in Command Finder / Launcher provides an expeditive alternative that allows retrieving commands extremely fast. Some fundamental functions are available through shortcuts to gain time. The shortcuts are noted between parenthesis next to the function's name. The functions having a shortcut are: Open (o), lock (l), radial profile (r). pyds9plugin 's functions divided in the three sub-extensions: generic functions, instrumentation and astronomical software. The terminal icon emphasize functions that do not require DS9 to be launched, which can be interesting for generalizing the processing on a server. Most of these functions (highlighted with the wheel icon) are compatible with multi-image and multi-threaded analysis. Functions with enhanced interactivity based on pickable meta-data for instance are marked with the interactivity icon. Functions are divided into three main menus: Generic functions, Instrumentation-AIT, and Astronomical software, and can be easily accessible via the command finder in the analysis menu bar Logging and verbosity The functions are silent when launched from DS9 and will only return nominal outputs (images, regions, messages). If the code encounters an error, the error message will pop up. If you run the same command from the terminal, you will have, in addition, all the verbosity from pyds9plugin . On top of that, all the logging is saved in \\(\\sim\\) /DS9QuickLookPlugIn/pyds9plugin_activity.log whether the function is launched from the terminal or DS9 user interface.","title":"Concept and implementation"},{"location":"concept/#a-pythonic-package","text":"For all the reasons cited above, we decided to create the first Pythonic DS9 plugin: pyds9plugin . It is a public domain DS9 extension for quick-look image processing. It aims to extract quantifiable information from imaging datasets with improved interaction. The plugin processing functions can then be generalized automatically to a set of images to turn the quick-look tool into a multiprocessing pipeline. It enables new users, from undergraduate students to full-time researchers, to actively interact (process, model, plot, etc.) with astronomical image data with one integrated software package. This package, available both on Pypi and GitHub , has been extensively used within the FIREBall project and for CLAUDS catalogs generation. Before going any further, I highly recommend watching this youtube video for a better understanding of the package. The other videos that are linked in the document to present some functionality are all gathered here .","title":"A Pythonic package"},{"location":"concept/#the-way-it-works","text":"DS9 incorporates the possibility to load extensions via an analysis file . When the plugin is installed and the analysis file loaded into the DS9 analysis menu, the extension can be used. The analysis file is the interface linking DS9 GUI with the plugin's functions. This file determines what menu is created within DS9 , what parameters windows each function launches, and what Shell command is interpreted. An example parameter window is shown in next Figure. Each pyds9plugin function is stored under DS9Utils access point, which links to pyds9plugin.DS9Utils module. Then command lines begin by DS9Utils followed by the function to be called and its arguments. pyds9plugin will then communicate, control, and exchange data with DS9 GUI via pyds9 package. The way the extension operates is illustrated in next. Diagram representing the way the plugin is loaded within DS9 and called. pyds9plugin can be called from the terminal (through command lines) which bypasses the need for DS9 GUI.","title":"The way it works"},{"location":"concept/#communication","text":"Within the DS9 program, the XPA (X Public Access) messaging system has been designed to provide seamless communication between DS9 GUI and other Unix programs (Perl, Tcl/Tk). It also provides an easy way for users to communicate with DS9 by executing XPA client shell commands. The pyds9 module uses a Python interface for XPA to communicate with DS9 . It supports communication with all of DS9 's XPA access points in two ways. It enables read and write access to all DS9 parameters, which allows controlling the display (load images, display NumPy arrays and catalogs, change parameters, create regions / DS9 plots, etc.). One interest in using Python is to use the full capability of its famous packages such as matplotlib , which offers other possibilities than the DS9 native plotting GUI. SExtractor parameters window allows to show the different parameter possibilities offered by DS9 . In addition to different menu types (entry, menu, and checkboxes, file system browser), the addition of tabs allows navigating through an important number of organized parameters.","title":"Communication"},{"location":"concept/#running-a-function","text":"All the functions are directly accessible from DS9 GUI (within the analysis menu). Accessing a function will make appear a parameter window that will then call the plugin. Navigating through the list of DS9Utils functions can be quite cumbersome for newcomers. OSX built-in Command Finder / Launcher provides an expeditive alternative that allows retrieving commands extremely fast. Some fundamental functions are available through shortcuts to gain time. The shortcuts are noted between parenthesis next to the function's name. The functions having a shortcut are: Open (o), lock (l), radial profile (r). pyds9plugin 's functions divided in the three sub-extensions: generic functions, instrumentation and astronomical software. The terminal icon emphasize functions that do not require DS9 to be launched, which can be interesting for generalizing the processing on a server. Most of these functions (highlighted with the wheel icon) are compatible with multi-image and multi-threaded analysis. Functions with enhanced interactivity based on pickable meta-data for instance are marked with the interactivity icon. Functions are divided into three main menus: Generic functions, Instrumentation-AIT, and Astronomical software, and can be easily accessible via the command finder in the analysis menu bar","title":"Running a function"},{"location":"concept/#logging-and-verbosity","text":"The functions are silent when launched from DS9 and will only return nominal outputs (images, regions, messages). If the code encounters an error, the error message will pop up. If you run the same command from the terminal, you will have, in addition, all the verbosity from pyds9plugin . On top of that, all the logging is saved in \\(\\sim\\) /DS9QuickLookPlugIn/pyds9plugin_activity.log whether the function is launched from the terminal or DS9 user interface.","title":"Logging and verbosity"},{"location":"feature/","text":"Important features Command line access As expressed above, DS9 will execute a Shell command, which will call the package's functions. DS9 allows prompting this command each time a function is launched through: Analysis -> Analysis command log . Copy-pasting this command into a Shell interpreter (like Terminal) will provide the same result. The package is then totally accessible via a Shell interpreter via command lines. This important feature could allow the plugin to be operated from other image visualization software like Ginga or Glueviz. Running DS9Utils inside the terminal will show all the available functions and running DS9Utils <function> -h will display the help of the related function. This leads to the next major feature: multi-image analysis. All functions arguments are parsed through the argparse module. Functions can then be called from DS9 , terminal or directly from Python using argv parameter: \\(\\verb! Python_command(argv=\"-p '/data/**/*.fits' -e 'ds9-=1'\")! \\label{eq:Python}\\) Command-line interface of DS9Utils . Calling DS9Utils , display all the available functions. Calling a specific function with -h argument displays the help and the functions parameters. Multi-image and multi-threaded analysis pyds9plugin is, in essence, a quick-look plugin that is perfect for visualizing, exploring, analyzing, and processing the displayed image. However, it was essential to make it suitable for more important pipelines as soon as the parameters have been tuned. To this end, all processing functions can be launched on a set of images by specifying the path of all the images using regular expression: DS9Utils <function> [-o OPTIONAL] --path \"/data/**/*.fits\" This feature allows, for instance, to spend important time optimizing interactively the \\(\\sim50\\) parameters of source extraction and add a whole image folder to the analysis command to process all the images when the parameters have been fine-tuned. To take advantage of modern computer architectures, it uses multi-threading to run each image on a different thread. The number of processors to be used is accessible via -N or --number_processors argument. By default, the code will use the total number of processors of the machine minus 2. A video can be found . Python interpreter We added a Python interpreter to the extension. This allows directly applying Pythonic one-line transformations to the displayed image. We list below some of the numerous one-line possibilities that can, for instance, be used for generating some noise images, apply linear transformation to images to decrease artificially your exposure time for instance), add noise to your image, mask bright sources, or perform more complex transformations like fast Fourier transform or auto-correlation. DS9 = np.median(ds9) + 0.1 (ds9-np.median(ds9)) ds9+=np.random.normal(0,0.5*ds9.std(),size=ds9.shape) ds9+=np.random.normal(0,0.5*ds9.std(),size=ds9.shape) ds9[ds9>np.percentile(ds9,99)]=np.nan ds9=abs(fftshift(fft2(ds9)))**2 ds9=correlate2d(ds9,ds9,boundary='symm', mode='same') Python macros Because one line is short, it is possible to simply give the path of a Python file. For instance, giving the path of the code below interpolates masked values in the DS9 frame and returns the new image in the DS9 GUI: \\ Basically, any function that does not require user's parameters can be directly implemented this way which is simpler as multiprocessing is already implemented. As well as for the previous section, the defined function can be run on a set of images by adding the regular expression path to the --path parameter (see Section 3.1.2 and ): DS9Utils python_command --exp \"/softs/pipe.py\" -p \"/data/**/*.fits\" The different variables that can be used inside macros are ds9 for the image loaded in DS9 and header for its header and d is the XPA access point for a more extensive communication with DS9 . Following lessons learned from @Joye2005, I decided to include in DS9 analysis functions only the ones that are generic/helpful and that require input parameters. Functions that do not require any parameter should be implemented as macros as multiprocessing is already implemented. To help people write their own, I published within the plugin several macros (in DS9functions/macros ). Each macro ( FFT.py , Autocorrelation.py , trimming.py , Column_line_correlation.py , Interpolate_NaNs.py , etc.) can either contain one specific task (compute and return the FFT of the DS9 image, trim wcs images, interpolate masked values in the image, etc.) or a series of processing (background subtraction source extraction astrometric calibration) from astropy.convolution import interpolate_replace_nans, Gaussian2DKernel STD_DEV = 1 while ~np.isfinite(ds9).all(): kernel = Gaussian2DKernel(x_stddev=STD_DEV, y_stddev=STD_DEV) ds9 = interpolate_replace_nans(ds9, kernel) STD_DEV += 1 VTK 3D rendering The Visualization Toolkit ( VTK ) is the leading open-source software for manipulating and displaying scientific data. It comes with state-of-the-art tools for 3D rendering, a suite of widgets for 3D interaction, and is already supported by some of the other applications ( JS9 , Icy , AstroImageJ ). We integrated it into the plugin to increase the interaction with selected regions in the image. The function allows to add contours, smooth the image rendering, change the scale, or create a rotating .gif video. Possibility to even fit interactively 2D Gaussians. It is also possible to analyze time series in 3D like through-focus or to explore the focus in the field. 3D VTK rendering: the different widgets in the bottom left corner allow to interact with the plotter and create animated GIFs. 3D VTK rendering: the different widgets in the top allow to interact with the plotter and create animated GIFs. Interactive profile fitting DS9 incorporates the very useful possibility to interactively plot 1D profiles (can be tilted, stacked in the orthogonal direction, plot the third axis component, etc). This gives essential qualitative information. Because it is essential to retrieve information from images (spatial/spectral resolution, diffusion exponential decay, etc.) it is critical to turn this qualitative information into re-usable quantitative information. To do this we added an interactive plot fitter to the extension (based on the dataphile package). This allows fitting 1-D profiles with interactive adjustment of the initial guess parameters to ensure that the fit converges. This function works on any DS9 plot, which means that plots generated via the plugin (radial profile or light curve) can be fitted with this function. As multi-feature analysis is essential in astronomy, the fitting is decomposed into two components: the background and the features added to the background. The different background possibles are constant, slope, exponential, double-exponential, logarithmic. It is then possible to add any number of features among Gaussian, Voigt, or Moffat profiles (see Figure [ds9/fit2d.jpg] ). Each feature parameter can be moved independently to be sure that the final fit converges. The definition of the different functions is shown in table 1 . To get the most of this fitting function, we added the possibility to add any other user-defined functions. The function just needs to be added to the package file:\\ pyds9plugin/Macros/Fitting_Functions/functions.py For each fitted parameter, be sure to define a list as default argument as it will be used to define the lower and upper bounds of the widget fitter. Function Formula Constant \\(y = a\\) Slope \\(y=a \\times x\\) Exponential \\(y=a\\times e^{-\\frac{x}{b}}\\) Logarithmic \\(y=a + b\\times ln(x-c)\\) Double exponential \\(y=a\\times e^{-\\frac{x}{b}} + c\\times e^{-\\frac{x}{d}}\\) Gaussian \\(y=a \\times e^{-(\\frac{c-b}{2*c})^2}\\) Moffat \\(y=a\\times (1 + \\frac{x-b}{c}^{2})^{-d}\\) Voight \\(y=a \\times\\frac{ \\mathbb{R}\\left ( wofz \\left ( \\frac{(x-b) \\gamma i}{c\\sqrt{\\pi}} \\right ) \\right ) }{ \\mathbb{R}\\left ( wofz \\left ( \\frac{x \\gamma i}{c\\sqrt{\\pi}} \\right ) \\right ) }\\) Fitting functions of the profile fitter. The first four functions are the possible backgrounds to fit. On top of this background, you can add as many Gaussian/Moffat/Voigt features as you want. The wofz function in the last line is the Faddeeva function \\(wofz(z)=e^{-z^2} \\times (1-erf(-iz) )\\) accessible in Python via scipy.special.wofz If no plot neither catalog is given, the window will work as a regular plotter, where the user can plot its own function and change the parameters. Fits file organizer This final functionality is a fits organizer, divided into two functions (Create header database and Filtering and organizing images). The first function generates from the input images (regular expression) a catalog (CSV table) concatenating all information contained in the header images. It will also add important information such as the path, directory, basename, creation and modification date, size, etc. of each image. The output database will give at a glance all image information which will help understand the dataset, spot failures in the acquisition, etc. It can also be open with TOPCAT to perform more complex analysis and selection of images. As only header information is read (not the pixels), the function is fast even on a significant number of files (a few seconds for thousands of files). Still, it can be very interesting to add to the output header catalog some image information such as the images' median, noise, the number of saturated pixels, or any other information. To this end, the function accepts Header catalog Macros where the user can write any Python command to append image estimators to the output header catalog. For instance, the following piece of code add to the header database some information about the image (column/line correlation, saturated pixels fraction, number of cosmic rays, etc.): import numpy as np SATURATION = 2 ** 16 -1 data = fitsfile[0].data columns = np.nanmean(data, axis=1) lines = np.nanmean(data, axis=0) table['median'] = np.nanmedian(data) table[\"Lines_difference\"] = np.nanmedian(lines[::2]) - np.nanmedian(lines[1::2]) table[\"Columns_difference\"] = np.nanmedian(columns[::2]) - np.nanmedian(columns[1::2]) table[\"SaturatedPixels\"] = 100 * np.mean(data > SATURATION) table[\"CosmicRays\"] = count_cosmic_rays(data) Output header database of the 3021 images contained in Home . Combining it with a Python script adding image information would only attach additional information to this table. The output header database can be used with the second function, which filters the images and organizes them following organizational rules. This function allows creating subsets of images verifying some header conditions. For instance, all images created after the 12th of September 2020 that have a positive EMGAIN or an exposure higher than 100 seconds can be recovered with this condition: \\(\\renewcommand{\\theequation}{6} \\verb! (EMGAIN > 0 | EXPOSURE >100) & CreationTime>200912 ! \\label{eq:selection}\\) The files are then directly organized in the file system with an arborescence following the column names. For instance, by giving EMGAIN,EXPOSURE , all files will get organized as shown in next figure. The function only generates aliases and does not move any original files. The header database and organized aliases are respectively saved in ~/DS9QuickLookPlugIn/HeaderDataBase and ~/DS9QuickLookPlugIn/subsets . Fits file organization following the previous selection and the organization rule EMGAIN,EXPOSURE .","title":"Important features"},{"location":"feature/#important-features","text":"","title":"Important features"},{"location":"feature/#command-line-access","text":"As expressed above, DS9 will execute a Shell command, which will call the package's functions. DS9 allows prompting this command each time a function is launched through: Analysis -> Analysis command log . Copy-pasting this command into a Shell interpreter (like Terminal) will provide the same result. The package is then totally accessible via a Shell interpreter via command lines. This important feature could allow the plugin to be operated from other image visualization software like Ginga or Glueviz. Running DS9Utils inside the terminal will show all the available functions and running DS9Utils <function> -h will display the help of the related function. This leads to the next major feature: multi-image analysis. All functions arguments are parsed through the argparse module. Functions can then be called from DS9 , terminal or directly from Python using argv parameter: \\(\\verb! Python_command(argv=\"-p '/data/**/*.fits' -e 'ds9-=1'\")! \\label{eq:Python}\\) Command-line interface of DS9Utils . Calling DS9Utils , display all the available functions. Calling a specific function with -h argument displays the help and the functions parameters.","title":"Command line access"},{"location":"feature/#multi-image-and-multi-threaded-analysis","text":"pyds9plugin is, in essence, a quick-look plugin that is perfect for visualizing, exploring, analyzing, and processing the displayed image. However, it was essential to make it suitable for more important pipelines as soon as the parameters have been tuned. To this end, all processing functions can be launched on a set of images by specifying the path of all the images using regular expression: DS9Utils <function> [-o OPTIONAL] --path \"/data/**/*.fits\" This feature allows, for instance, to spend important time optimizing interactively the \\(\\sim50\\) parameters of source extraction and add a whole image folder to the analysis command to process all the images when the parameters have been fine-tuned. To take advantage of modern computer architectures, it uses multi-threading to run each image on a different thread. The number of processors to be used is accessible via -N or --number_processors argument. By default, the code will use the total number of processors of the machine minus 2. A video can be found .","title":"Multi-image and multi-threaded analysis"},{"location":"feature/#python-interpreter","text":"We added a Python interpreter to the extension. This allows directly applying Pythonic one-line transformations to the displayed image. We list below some of the numerous one-line possibilities that can, for instance, be used for generating some noise images, apply linear transformation to images to decrease artificially your exposure time for instance), add noise to your image, mask bright sources, or perform more complex transformations like fast Fourier transform or auto-correlation. DS9 = np.median(ds9) + 0.1 (ds9-np.median(ds9)) ds9+=np.random.normal(0,0.5*ds9.std(),size=ds9.shape) ds9+=np.random.normal(0,0.5*ds9.std(),size=ds9.shape) ds9[ds9>np.percentile(ds9,99)]=np.nan ds9=abs(fftshift(fft2(ds9)))**2 ds9=correlate2d(ds9,ds9,boundary='symm', mode='same')","title":"Python interpreter"},{"location":"feature/#python-macros","text":"Because one line is short, it is possible to simply give the path of a Python file. For instance, giving the path of the code below interpolates masked values in the DS9 frame and returns the new image in the DS9 GUI: \\ Basically, any function that does not require user's parameters can be directly implemented this way which is simpler as multiprocessing is already implemented. As well as for the previous section, the defined function can be run on a set of images by adding the regular expression path to the --path parameter (see Section 3.1.2 and ): DS9Utils python_command --exp \"/softs/pipe.py\" -p \"/data/**/*.fits\" The different variables that can be used inside macros are ds9 for the image loaded in DS9 and header for its header and d is the XPA access point for a more extensive communication with DS9 . Following lessons learned from @Joye2005, I decided to include in DS9 analysis functions only the ones that are generic/helpful and that require input parameters. Functions that do not require any parameter should be implemented as macros as multiprocessing is already implemented. To help people write their own, I published within the plugin several macros (in DS9functions/macros ). Each macro ( FFT.py , Autocorrelation.py , trimming.py , Column_line_correlation.py , Interpolate_NaNs.py , etc.) can either contain one specific task (compute and return the FFT of the DS9 image, trim wcs images, interpolate masked values in the image, etc.) or a series of processing (background subtraction source extraction astrometric calibration) from astropy.convolution import interpolate_replace_nans, Gaussian2DKernel STD_DEV = 1 while ~np.isfinite(ds9).all(): kernel = Gaussian2DKernel(x_stddev=STD_DEV, y_stddev=STD_DEV) ds9 = interpolate_replace_nans(ds9, kernel) STD_DEV += 1","title":"Python macros"},{"location":"feature/#vtk-3d-rendering","text":"The Visualization Toolkit ( VTK ) is the leading open-source software for manipulating and displaying scientific data. It comes with state-of-the-art tools for 3D rendering, a suite of widgets for 3D interaction, and is already supported by some of the other applications ( JS9 , Icy , AstroImageJ ). We integrated it into the plugin to increase the interaction with selected regions in the image. The function allows to add contours, smooth the image rendering, change the scale, or create a rotating .gif video. Possibility to even fit interactively 2D Gaussians. It is also possible to analyze time series in 3D like through-focus or to explore the focus in the field. 3D VTK rendering: the different widgets in the bottom left corner allow to interact with the plotter and create animated GIFs. 3D VTK rendering: the different widgets in the top allow to interact with the plotter and create animated GIFs.","title":"VTK 3D rendering"},{"location":"feature/#interactive-profile-fitting","text":"DS9 incorporates the very useful possibility to interactively plot 1D profiles (can be tilted, stacked in the orthogonal direction, plot the third axis component, etc). This gives essential qualitative information. Because it is essential to retrieve information from images (spatial/spectral resolution, diffusion exponential decay, etc.) it is critical to turn this qualitative information into re-usable quantitative information. To do this we added an interactive plot fitter to the extension (based on the dataphile package). This allows fitting 1-D profiles with interactive adjustment of the initial guess parameters to ensure that the fit converges. This function works on any DS9 plot, which means that plots generated via the plugin (radial profile or light curve) can be fitted with this function. As multi-feature analysis is essential in astronomy, the fitting is decomposed into two components: the background and the features added to the background. The different background possibles are constant, slope, exponential, double-exponential, logarithmic. It is then possible to add any number of features among Gaussian, Voigt, or Moffat profiles (see Figure [ds9/fit2d.jpg] ). Each feature parameter can be moved independently to be sure that the final fit converges. The definition of the different functions is shown in table 1 . To get the most of this fitting function, we added the possibility to add any other user-defined functions. The function just needs to be added to the package file:\\ pyds9plugin/Macros/Fitting_Functions/functions.py For each fitted parameter, be sure to define a list as default argument as it will be used to define the lower and upper bounds of the widget fitter. Function Formula Constant \\(y = a\\) Slope \\(y=a \\times x\\) Exponential \\(y=a\\times e^{-\\frac{x}{b}}\\) Logarithmic \\(y=a + b\\times ln(x-c)\\) Double exponential \\(y=a\\times e^{-\\frac{x}{b}} + c\\times e^{-\\frac{x}{d}}\\) Gaussian \\(y=a \\times e^{-(\\frac{c-b}{2*c})^2}\\) Moffat \\(y=a\\times (1 + \\frac{x-b}{c}^{2})^{-d}\\) Voight \\(y=a \\times\\frac{ \\mathbb{R}\\left ( wofz \\left ( \\frac{(x-b) \\gamma i}{c\\sqrt{\\pi}} \\right ) \\right ) }{ \\mathbb{R}\\left ( wofz \\left ( \\frac{x \\gamma i}{c\\sqrt{\\pi}} \\right ) \\right ) }\\) Fitting functions of the profile fitter. The first four functions are the possible backgrounds to fit. On top of this background, you can add as many Gaussian/Moffat/Voigt features as you want. The wofz function in the last line is the Faddeeva function \\(wofz(z)=e^{-z^2} \\times (1-erf(-iz) )\\) accessible in Python via scipy.special.wofz If no plot neither catalog is given, the window will work as a regular plotter, where the user can plot its own function and change the parameters.","title":"Interactive profile fitting"},{"location":"feature/#fits-file-organizer","text":"This final functionality is a fits organizer, divided into two functions (Create header database and Filtering and organizing images). The first function generates from the input images (regular expression) a catalog (CSV table) concatenating all information contained in the header images. It will also add important information such as the path, directory, basename, creation and modification date, size, etc. of each image. The output database will give at a glance all image information which will help understand the dataset, spot failures in the acquisition, etc. It can also be open with TOPCAT to perform more complex analysis and selection of images. As only header information is read (not the pixels), the function is fast even on a significant number of files (a few seconds for thousands of files). Still, it can be very interesting to add to the output header catalog some image information such as the images' median, noise, the number of saturated pixels, or any other information. To this end, the function accepts Header catalog Macros where the user can write any Python command to append image estimators to the output header catalog. For instance, the following piece of code add to the header database some information about the image (column/line correlation, saturated pixels fraction, number of cosmic rays, etc.): import numpy as np SATURATION = 2 ** 16 -1 data = fitsfile[0].data columns = np.nanmean(data, axis=1) lines = np.nanmean(data, axis=0) table['median'] = np.nanmedian(data) table[\"Lines_difference\"] = np.nanmedian(lines[::2]) - np.nanmedian(lines[1::2]) table[\"Columns_difference\"] = np.nanmedian(columns[::2]) - np.nanmedian(columns[1::2]) table[\"SaturatedPixels\"] = 100 * np.mean(data > SATURATION) table[\"CosmicRays\"] = count_cosmic_rays(data) Output header database of the 3021 images contained in Home . Combining it with a Python script adding image information would only attach additional information to this table. The output header database can be used with the second function, which filters the images and organizes them following organizational rules. This function allows creating subsets of images verifying some header conditions. For instance, all images created after the 12th of September 2020 that have a positive EMGAIN or an exposure higher than 100 seconds can be recovered with this condition: \\(\\renewcommand{\\theequation}{6} \\verb! (EMGAIN > 0 | EXPOSURE >100) & CreationTime>200912 ! \\label{eq:selection}\\) The files are then directly organized in the file system with an arborescence following the column names. For instance, by giving EMGAIN,EXPOSURE , all files will get organized as shown in next figure. The function only generates aliases and does not move any original files. The header database and organized aliases are respectively saved in ~/DS9QuickLookPlugIn/HeaderDataBase and ~/DS9QuickLookPlugIn/subsets . Fits file organization following the previous selection and the organization rule EMGAIN,EXPOSURE .","title":"Fits file organizer"},{"location":"function/","text":"The different functions The functions are divided into three categories to help the organization: Generic functions, instrumentation-related functions, and astronomical-software-related functions. To make more accessible the understanding of each function, they are possibly prefixed by three badges: Boosting interaction: These functions are considered to improve the interactivity between the user and the visualized data. This interaction can be based on user-defined regions, interactive fitting, generation of pickable metadata, etc. DS9 not required: The function is totally accessible via Terminal independently from DS9 , which means that the function does not need DS9 to be installed/open for being called. This can be interesting for server users. Multi-image processing: The function, accessible via Shell command, can be run on several images, and each analysis will run on a different thread pyds9plugin's functions divided in the three sub-extensions: generic functions, instrumentation and astronomical software. The terminal icon emphasize functions that do not require DS9 to be launched, which can be interesting for generalizing the processing on a server. Most of these functions (highlighted with the wheel icon) are compatible with multi-image and multi-threaded analysis. Functions with enhanced interactivity based on pickable meta-data for instance are marked with the interactivity icon. Generic functions This series of very general functions aims at filling some gaps of DS9 with stable generic functions (fitting, region-based functions), gaining some time with key functions: (change display settings/lock parameters), etc. Change Display Parameters This basic function applies specific thresholding, scale, and colormap to the DS9 -loaded image to give a quick and general visualization of the image. Accessible via one key hit (S), this allows exploring the full depth of the image quickly. More interestingly, the user can focus on a specific region of the image by creating and selecting a box or a circle on the region of interest. Lock / Unlock Frames Access all the locking parameters of DS9 frames at once to gain time: frame, crosshair, smooth, scale-limits, colorbar. Create Header DataBase Creates a catalog combining all meta-data information. Filtering & organizing images Uses fits file database to create and order nicely filtered fits files Macro / Python Command Interprets a Python command or file and applies it to given image(s) Interactive 1D Fitting On Plot Fit interactively any DS9 plot or catalog by different pre-defined functions Fit Gaussian 2D Performs 2D Gaussian fitting on the encircled region in DS9. Opens up a VTK 3D plot of the encircled data. Any other feature can be fitted by selecting it (r). Each fit creates a region on the DS9 GUI with the fit parameters of astropy.modeling.functional_models.Gaussian2D . Trimming Cropping/Trimming function that keeps WCS header information. Open file(s) in DS9 in an easier way. Possibility to enter the path of an image and a regular expression to open multiple files. Files can be open in the following format: Slice, Multi-frame-as-cube, multi-frame, RGB, Cube, PRISM. Plot Region In 3D Convert image Convert file into another type. The different types are (int8, int16, int32, int64, float32, float64) with the possibiity to rescale pixels value. Instrumentation This series of functions aims to assist instrument researchers during assembly and testing with through-focus, light curves, centering, radial, energy profile analysis, etc. More complex but general processing functions (for detector characterization, for instance) can be found in the macros like auto-correlation, fast Fourier transform, smoothing, masking, interpolation, noise measurements, etc. Centering (C) Centers DS9 region encircling a spot. Five centroid methods are available: maximum, \\(2\\times1\\) 1D fittin, 2D fitting, barycenter). Radial profile Compute and plot azimuthally averaged radial profile and energy profile of the encircled source in DS9 after performing a re-centering. For extended sources, the source size can be informed to deconvolve the radial profile from the source. Throughfocus analysis Perform a through-focus analysis on a series of images and return different focus estimates as well as the 3D evolution of the PSF. Explore PSFs/vignettes Explore PSFs/vignettes based on SExtractor catalog to visualize how it evolves in the field or with FWHM, magnitude, excentricity, angle or amplitude. Light curve Perform a light-curve analysis and returns the centered image. Extract Sources Extract sources from images(s) using photutils Subtract Background Subtract background from images(s) using photutils Aperture photometry Computes photometry in given aperture(s) Radial and energy profile estimation. The function also returns different image quality estimators: FWHM, \\(50\\%\\) and \\(80\\%\\) encircled energy, Moffat fit. hrough-focus analysis based on a set of calibration images. The function generates a plot with four focus estimates: FWHM, EE \\(_{50\\%}\\) , EE \\(_{80\\%}\\) , Max \\(_{\\mathrm{pix}}\\) Astronomical software The goal of this series of functions is to link the most essential astronomical image processing software like the astromatic suite ( SExtractor , Stiff , Swarp , PSFex - need to be installed) and offer them a parameter GUI. Astrometric Calibration Uses astrometry.net to compute position on the sky and return WCS header. If regions are created (by hand or via SExtractor ) and the parameter XY-catalog is set, only the position of the sources will be uploaded. STIFF - Color Images Run STIFF astromatic software to convert scientific FITS images to the more popular TIFF format for illustration purposes. PSFex Run PSFex astromatic software to extracts models of the Point Spread Function from FITS images processed with SExtractor , and measures the quality of images. The generated PSF models can be used for model-fitting photometry or morphological analyses. SExtractor Run SExtraxtor astromatic software to build a catalogue of objects from an astronomical image. Swarp Run Swarp software from DS9 to resample and co-add together FITS images using any astrometric projection defined in the WCS standard. Resample images Run part of Swarp astromatic software for resampling without co-addition. SExtractor function output. Here, all the regions can be selected and will show a particular raw of the catalog. Likewise, one or several lines of the catalogs can be selected, and the corresponding region(s) will blink. This can be of huge interest to optimize source extraction settings, to find particular objects in the image, etc.","title":"All the functions"},{"location":"function/#the-different-functions","text":"The functions are divided into three categories to help the organization: Generic functions, instrumentation-related functions, and astronomical-software-related functions. To make more accessible the understanding of each function, they are possibly prefixed by three badges: Boosting interaction: These functions are considered to improve the interactivity between the user and the visualized data. This interaction can be based on user-defined regions, interactive fitting, generation of pickable metadata, etc. DS9 not required: The function is totally accessible via Terminal independently from DS9 , which means that the function does not need DS9 to be installed/open for being called. This can be interesting for server users. Multi-image processing: The function, accessible via Shell command, can be run on several images, and each analysis will run on a different thread pyds9plugin's functions divided in the three sub-extensions: generic functions, instrumentation and astronomical software. The terminal icon emphasize functions that do not require DS9 to be launched, which can be interesting for generalizing the processing on a server. Most of these functions (highlighted with the wheel icon) are compatible with multi-image and multi-threaded analysis. Functions with enhanced interactivity based on pickable meta-data for instance are marked with the interactivity icon.","title":"The different functions"},{"location":"function/#generic-functions","text":"This series of very general functions aims at filling some gaps of DS9 with stable generic functions (fitting, region-based functions), gaining some time with key functions: (change display settings/lock parameters), etc. Change Display Parameters This basic function applies specific thresholding, scale, and colormap to the DS9 -loaded image to give a quick and general visualization of the image. Accessible via one key hit (S), this allows exploring the full depth of the image quickly. More interestingly, the user can focus on a specific region of the image by creating and selecting a box or a circle on the region of interest. Lock / Unlock Frames Access all the locking parameters of DS9 frames at once to gain time: frame, crosshair, smooth, scale-limits, colorbar. Create Header DataBase Creates a catalog combining all meta-data information. Filtering & organizing images Uses fits file database to create and order nicely filtered fits files Macro / Python Command Interprets a Python command or file and applies it to given image(s) Interactive 1D Fitting On Plot Fit interactively any DS9 plot or catalog by different pre-defined functions Fit Gaussian 2D Performs 2D Gaussian fitting on the encircled region in DS9. Opens up a VTK 3D plot of the encircled data. Any other feature can be fitted by selecting it (r). Each fit creates a region on the DS9 GUI with the fit parameters of astropy.modeling.functional_models.Gaussian2D . Trimming Cropping/Trimming function that keeps WCS header information. Open file(s) in DS9 in an easier way. Possibility to enter the path of an image and a regular expression to open multiple files. Files can be open in the following format: Slice, Multi-frame-as-cube, multi-frame, RGB, Cube, PRISM. Plot Region In 3D Convert image Convert file into another type. The different types are (int8, int16, int32, int64, float32, float64) with the possibiity to rescale pixels value.","title":"Generic functions"},{"location":"function/#instrumentation","text":"This series of functions aims to assist instrument researchers during assembly and testing with through-focus, light curves, centering, radial, energy profile analysis, etc. More complex but general processing functions (for detector characterization, for instance) can be found in the macros like auto-correlation, fast Fourier transform, smoothing, masking, interpolation, noise measurements, etc. Centering (C) Centers DS9 region encircling a spot. Five centroid methods are available: maximum, \\(2\\times1\\) 1D fittin, 2D fitting, barycenter). Radial profile Compute and plot azimuthally averaged radial profile and energy profile of the encircled source in DS9 after performing a re-centering. For extended sources, the source size can be informed to deconvolve the radial profile from the source. Throughfocus analysis Perform a through-focus analysis on a series of images and return different focus estimates as well as the 3D evolution of the PSF. Explore PSFs/vignettes Explore PSFs/vignettes based on SExtractor catalog to visualize how it evolves in the field or with FWHM, magnitude, excentricity, angle or amplitude. Light curve Perform a light-curve analysis and returns the centered image. Extract Sources Extract sources from images(s) using photutils Subtract Background Subtract background from images(s) using photutils Aperture photometry Computes photometry in given aperture(s) Radial and energy profile estimation. The function also returns different image quality estimators: FWHM, \\(50\\%\\) and \\(80\\%\\) encircled energy, Moffat fit. hrough-focus analysis based on a set of calibration images. The function generates a plot with four focus estimates: FWHM, EE \\(_{50\\%}\\) , EE \\(_{80\\%}\\) , Max \\(_{\\mathrm{pix}}\\)","title":"Instrumentation"},{"location":"function/#astronomical-software","text":"The goal of this series of functions is to link the most essential astronomical image processing software like the astromatic suite ( SExtractor , Stiff , Swarp , PSFex - need to be installed) and offer them a parameter GUI. Astrometric Calibration Uses astrometry.net to compute position on the sky and return WCS header. If regions are created (by hand or via SExtractor ) and the parameter XY-catalog is set, only the position of the sources will be uploaded. STIFF - Color Images Run STIFF astromatic software to convert scientific FITS images to the more popular TIFF format for illustration purposes. PSFex Run PSFex astromatic software to extracts models of the Point Spread Function from FITS images processed with SExtractor , and measures the quality of images. The generated PSF models can be used for model-fitting photometry or morphological analyses. SExtractor Run SExtraxtor astromatic software to build a catalogue of objects from an astronomical image. Swarp Run Swarp software from DS9 to resample and co-add together FITS images using any astrometric projection defined in the WCS standard. Resample images Run part of Swarp astromatic software for resampling without co-addition. SExtractor function output. Here, all the regions can be selected and will show a particular raw of the catalog. Likewise, one or several lines of the catalogs can be selected, and the corresponding region(s) will blink. This can be of huge interest to optimize source extraction settings, to find particular objects in the image, etc.","title":"Astronomical software"},{"location":"install/","text":"Installation pyds9plugin is governed by the CeCILL-B license under French law and abides by the rules of free software distribution. The package has been released on https://pypi.org and is being reviewed to become an astropy affiliated packages . The source code is available on GitHub: git clone git://GitHub.com/vpicouet/pyds9plugin.git People can contribute to the code via GitHub and fill issues with Github's issue tracker. pyds9plugin works with DS9 with a version equal to or higher than 8.2. The extension can be installed via the terminal: pip install -v pyds9plugin or python3 setup.py install The package can also be installed inside a virtual environment . The package will be accessible via DS9Utils keyword in the terminal. To load the analysis file in DS9 run: DS9Utils LoadDS9QuickLookPlugin Warning If the file can not be added automatically, instructions will appear to add it manually. The given path returned by the previous command will just need to be added to DS9 preference analysis section Prerequisites and dependence: pyds9plugin runs under Python versions \\(>3.5\\) . Note that as a minimum, any user will need to have at least installed pyds9 , NumPy , scipy , astropy , argparse , pyvista , tqdm , datetime , pandas , PyQt5 , matplotlib and dataphile . For full functionality the astromatic suite ( Swarp , Stiff and PSFex ) is also needed. Warning Pyds9 package is not available on windows.","title":"Installation"},{"location":"install/#installation","text":"pyds9plugin is governed by the CeCILL-B license under French law and abides by the rules of free software distribution. The package has been released on https://pypi.org and is being reviewed to become an astropy affiliated packages . The source code is available on GitHub: git clone git://GitHub.com/vpicouet/pyds9plugin.git People can contribute to the code via GitHub and fill issues with Github's issue tracker. pyds9plugin works with DS9 with a version equal to or higher than 8.2. The extension can be installed via the terminal: pip install -v pyds9plugin or python3 setup.py install The package can also be installed inside a virtual environment . The package will be accessible via DS9Utils keyword in the terminal. To load the analysis file in DS9 run: DS9Utils LoadDS9QuickLookPlugin Warning If the file can not be added automatically, instructions will appear to add it manually. The given path returned by the previous command will just need to be added to DS9 preference analysis section Prerequisites and dependence: pyds9plugin runs under Python versions \\(>3.5\\) . Note that as a minimum, any user will need to have at least installed pyds9 , NumPy , scipy , astropy , argparse , pyvista , tqdm , datetime , pandas , PyQt5 , matplotlib and dataphile . For full functionality the astromatic suite ( Swarp , Stiff and PSFex ) is also needed. Warning Pyds9 package is not available on windows.","title":"Installation"},{"location":"license/","text":"vincent@picouet.fr This software is a computer program whose purpose is to perform quicklook image processing and analysis. It can ionteract with SAOImage DS9 Software when loaded as an extension. This software is governed by the CeCILL-B license under French law and abiding by the rules of distribution of free software. You can use, modify and/ or redistribute the software under the terms of the CeCILL-B license as circulated by CEA, CNRS and INRIA at the following URL \"http://www.cecill.info\". As a counterpart to the access to the source code and rights to copy, modify and redistribute granted by the license, users are provided only with a limited warranty and the software's author, the holder of the economic rights, and the successive licensors have only limited liability. In this respect, the user's attention is drawn to the risks associated with loading, using, modifying and/or developing or reproducing the software by the user in light of its specific status of free software, that may mean that it is complicated to manipulate, and that also therefore means that it is reserved for developers and experienced professionals having in-depth computer knowledge. Users are therefore encouraged to load and test the software's suitability as regards their requirements in conditions enabling the security of their systems and/or data to be ensured and, more generally, to use and operate it in the same conditions as regards security. The fact that you are presently reading this means that you have had knowledge of the CeCILL-B license and that you accept its terms. window.PlotlyConfig = {MathJaxConfig: 'local'}; window.PLOTLYENV=window.PLOTLYENV || {}; if (document.getElementById(\"3fdfa86a-b72b-4762-b39f-8f65d9cc86c1\")) { Plotly.newPlot( \"3fdfa86a-b72b-4762-b39f-8f65d9cc86c1\", [{\"error_y\":{\"array\":[0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05],\"thickness\":1,\"type\":\"data\",\"width\":0},\"hovertext\":[\"RA = 31.9309548<br>DEC = -5.626884<br>Z = 0.656<br>nuv_mag = 23.318<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 31.9538443<br>DEC = -5.798012<br>Z = 0.6554<br>nuv_mag = 22.941<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 31.9741113<br>DEC = -5.877338<br>Z = 0.9886<br>nuv_mag = 22.732<br>fuv_mag = -99.0<br>flag = OVI<br>\",\"RA = 31.9890415<br>DEC = -5.6858169<br>Z = 0.6448<br>nuv_mag = 23.027<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.000532<br>DEC = -5.6935508<br>Z = 0.6414<br>nuv_mag = 23.635<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.0228903<br>DEC = -5.6830786<br>Z = 0.6425<br>nuv_mag = 24.849<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.040139<br>DEC = -5.644209<br>Z = 0.6421<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Lya<br>\",\"RA = 32.06502777<br>DEC = -5.603094653<br>Z = -99.0<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Bright Star<br>\",\"RA = 32.08343397<br>DEC = -5.69184427<br>Z = -99.0<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Bright Star<br>\",\"RA = 32.1065928<br>DEC = -5.6187636<br>Z = 0.6963<br>nuv_mag = 23.088<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1240501<br>DEC = -5.6766783<br>Z = 0.6432<br>nuv_mag = 24.181<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1391437<br>DEC = -5.6582513<br>Z = 1.394<br>nuv_mag = 23.842<br>fuv_mag = -99.0<br>flag = LyC<br>\",\"RA = 32.1502586<br>DEC = -5.7586235<br>Z = 0.9099<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = OVI<br>\",\"RA = 32.162534<br>DEC = -5.6914294<br>Z = 0.643<br>nuv_mag = 23.138<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1746643<br>DEC = -5.7065021<br>Z = 0.6446<br>nuv_mag = 24.261<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1957408<br>DEC = -5.6692887<br>Z = 0.642<br>nuv_mag = 23.355<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.2166499<br>DEC = -5.6978863<br>Z = 0.6379<br>nuv_mag = 24.073<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.2284759<br>DEC = -5.6895905<br>Z = 0.6363<br>nuv_mag = 24.466<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.2586059<br>DEC = -5.7849853<br>Z = 0.6442<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.28752152<br>DEC = -5.695231017<br>Z = -99.0<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Bright Star<br>\",\"RA = 32.3099606<br>DEC = -5.6220169<br>Z = 0.9368<br>nuv_mag = 23.83<br>fuv_mag = -99.0<br>flag = OVI<br>\",\"RA = 32.3207838<br>DEC = -5.6215058<br>Z = 0.6563<br>nuv_mag = 23.383<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3368831<br>DEC = -5.6281332<br>Z = 0.6629<br>nuv_mag = 23.336<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3528866<br>DEC = -5.7204662<br>Z = 0.6592<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3688997<br>DEC = -5.7281033<br>Z = 0.629<br>nuv_mag = 23.027<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3881211<br>DEC = -5.6096516<br>Z = 0.6432<br>nuv_mag = 23.363<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.4020622<br>DEC = -5.7781286<br>Z = 0.6566<br>nuv_mag = 24.639<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.420143<br>DEC = -5.6153753<br>Z = 0.6644<br>nuv_mag = 22.696<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.4359121<br>DEC = -5.7282388<br>Z = 0.6668<br>nuv_mag = 23.495<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.454515<br>DEC = -5.806811<br>Z = 0.738<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Lya<br>\",\"RA = 32.469175<br>DEC = -5.7396005<br>Z = 0.6497<br>nuv_mag = 22.888<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.4832373<br>DEC = -5.8575442<br>Z = 0.7647<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.5057281<br>DEC = -5.6252093<br>Z = 0.6431<br>nuv_mag = 22.348<br>fuv_mag = -99.0<br>flag = Lya<br>\"],\"line\":{\"width\":2},\"marker\":{\"color\":\"black\",\"symbol\":\"diamond-wide\"},\"mode\":\"markers\",\"name\":\"Emission line\",\"x\":[-12.124363143092436,-11.168601467757734,-10.315675874887198,-9.69761634952174,-9.216535929481207,-8.279532138919846,-7.628584851545311,-6.510037761998716,-5.739608179302061,-4.765844298992474,-4.0335013796432975,-3.399075153997561,-2.9321031108200555,-2.4161801612117317,-1.9062504977524444,-1.020015801453887,-0.14086987813327456,0.3564024966108478,1.623110039325331,2.8388868222131523,4.029694331892832,4.235725408200157,4.912046724380449,5.716843195742949,6.301348037495965,7.061867723612497,7.648128638095077,8.404550874295758,9.06770039601797,9.771534623115908,10.460199758701778,11.262033030348617,11.985736813186227],\"y\":[2.35,-4.91,-5.72,-0.96,-1.53,-1.01,0.6,-7332.9,-7336.64,5.67,-0.68,-1.99,-5.64,-1.32,-1.84,-0.46,-1.97,-1.73,-5.18,-7336.78,1.81,2.61,2.82,-1.35,-3.9,2.14,-3.98,3.46,-1.13,0.8,-2.86,0.63,1.47],\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"New targets\",\"x\":[-12.26122669405011,-11.291308976392115,-10.430288236212428,-9.800239164838702,-9.312659714784198,-8.36391576612444,-7.705630911058939,-6.577413388031582,-5.7932581546242945,-4.812601368355291,-4.069302089941103,-3.4293790558116704,-2.9556938415976997,-2.435844454163248,-1.9209809564044016,-1.0286807853311628,-0.14184391189787976,0.3586146145573289,1.633788745994456,2.85495668213168,4.04509344157166,4.2523335738923285,4.930603827361628,5.741187774771635,6.326387111458815,7.079111356476237,7.672556284982071,8.41937626219378,9.088798609336255,9.78859048094523,10.475613323450725,11.267803112266645,11.98031686005984],\"y\":[5.234890627508981,-2.046991873077983,-5.422110007310235,2.730223771970628,2.4013445875080794,2.8476027688400674,4.501821445328158,6.25011538622752,2.4754002633300107,5.584392953281189,3.1210403950052625,3.9049837982693805,-0.3673629343350567,2.4930575176158682,1.8514748428574337,3.4344982739747434,2.2175038500530273,2.570112901541384,-1.4882034284672427,2.3282790785873706,5.43624600729141,5.456788125777109,5.173878624401049,1.379884665808649,0.9286990308477954,5.94995892272738,-1.236756500066261,5.7020916997705955,0.9203561323184569,-2.4084785400757505,0.43775104769480183,-4.551738074541237,5.268727383476253],\"type\":\"scatter\"},{\"hovertext\":[\"RA = 31.9309548<br>DEC = -5.626884<br>Z = 0.656<br>nuv_mag = 23.318<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 31.9538443<br>DEC = -5.798012<br>Z = 0.6554<br>nuv_mag = 22.941<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 31.9741113<br>DEC = -5.877338<br>Z = 0.9886<br>nuv_mag = 22.732<br>fuv_mag = -99.0<br>flag = OVI<br>\",\"RA = 31.9890415<br>DEC = -5.6858169<br>Z = 0.6448<br>nuv_mag = 23.027<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.000532<br>DEC = -5.6935508<br>Z = 0.6414<br>nuv_mag = 23.635<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.0228903<br>DEC = -5.6830786<br>Z = 0.6425<br>nuv_mag = 24.849<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.040139<br>DEC = -5.644209<br>Z = 0.6421<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Lya<br>\",\"RA = 32.06502777<br>DEC = -5.603094653<br>Z = -99.0<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Bright Star<br>\",\"RA = 32.08343397<br>DEC = -5.69184427<br>Z = -99.0<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Bright Star<br>\",\"RA = 32.1065928<br>DEC = -5.6187636<br>Z = 0.6963<br>nuv_mag = 23.088<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1240501<br>DEC = -5.6766783<br>Z = 0.6432<br>nuv_mag = 24.181<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1391437<br>DEC = -5.6582513<br>Z = 1.394<br>nuv_mag = 23.842<br>fuv_mag = -99.0<br>flag = LyC<br>\",\"RA = 32.1502586<br>DEC = -5.7586235<br>Z = 0.9099<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = OVI<br>\",\"RA = 32.162534<br>DEC = -5.6914294<br>Z = 0.643<br>nuv_mag = 23.138<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1746643<br>DEC = -5.7065021<br>Z = 0.6446<br>nuv_mag = 24.261<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.1957408<br>DEC = -5.6692887<br>Z = 0.642<br>nuv_mag = 23.355<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.2166499<br>DEC = -5.6978863<br>Z = 0.6379<br>nuv_mag = 24.073<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.2284759<br>DEC = -5.6895905<br>Z = 0.6363<br>nuv_mag = 24.466<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.2586059<br>DEC = -5.7849853<br>Z = 0.6442<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.28752152<br>DEC = -5.695231017<br>Z = -99.0<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Bright Star<br>\",\"RA = 32.3099606<br>DEC = -5.6220169<br>Z = 0.9368<br>nuv_mag = 23.83<br>fuv_mag = -99.0<br>flag = OVI<br>\",\"RA = 32.3207838<br>DEC = -5.6215058<br>Z = 0.6563<br>nuv_mag = 23.383<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3368831<br>DEC = -5.6281332<br>Z = 0.6629<br>nuv_mag = 23.336<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3528866<br>DEC = -5.7204662<br>Z = 0.6592<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3688997<br>DEC = -5.7281033<br>Z = 0.629<br>nuv_mag = 23.027<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.3881211<br>DEC = -5.6096516<br>Z = 0.6432<br>nuv_mag = 23.363<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.4020622<br>DEC = -5.7781286<br>Z = 0.6566<br>nuv_mag = 24.639<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.420143<br>DEC = -5.6153753<br>Z = 0.6644<br>nuv_mag = 22.696<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.4359121<br>DEC = -5.7282388<br>Z = 0.6668<br>nuv_mag = 23.495<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.454515<br>DEC = -5.806811<br>Z = 0.738<br>nuv_mag = -1.0<br>fuv_mag = nan<br>flag = Lya<br>\",\"RA = 32.469175<br>DEC = -5.7396005<br>Z = 0.6497<br>nuv_mag = 22.888<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.4832373<br>DEC = -5.8575442<br>Z = 0.7647<br>nuv_mag = -99.0<br>fuv_mag = -99.0<br>flag = Lya<br>\",\"RA = 32.5057281<br>DEC = -5.6252093<br>Z = 0.6431<br>nuv_mag = 22.348<br>fuv_mag = -99.0<br>flag = Lya<br>\"],\"line\":{\"width\":2},\"marker\":{\"cmax\":24.849,\"cmin\":-99.0,\"color\":[23.318,22.941,22.732,23.027,23.635,24.849,-1.0,-1.0,-1.0,23.088,24.181,23.842,-99.0,23.138,24.261,23.355,24.073,24.466,-99.0,-1.0,23.83,23.383,23.336,-99.0,23.027,23.363,24.639,22.696,23.495,-1.0,22.888,-99.0,22.348],\"colorbar\":{\"len\":0.6,\"title\":{\"text\":\"nuv_mag\"}},\"colorscale\":[[0.0,\"rgb(0, 0, 0)\"],[0.09090909090909091,\"rgb(16, 16, 16)\"],[0.18181818181818182,\"rgb(38, 38, 38)\"],[0.2727272727272727,\"rgb(59, 59, 59)\"],[0.36363636363636365,\"rgb(81, 80, 80)\"],[0.45454545454545453,\"rgb(102, 101, 101)\"],[0.5454545454545454,\"rgb(124, 123, 122)\"],[0.6363636363636364,\"rgb(146, 146, 145)\"],[0.7272727272727273,\"rgb(171, 171, 170)\"],[0.8181818181818182,\"rgb(197, 197, 195)\"],[0.9090909090909091,\"rgb(224, 224, 223)\"],[1.0,\"rgb(254, 254, 253)\"]],\"line\":{\"width\":1},\"showscale\":true,\"size\":20,\"symbol\":[\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\"]},\"mode\":\"markers+text\",\"name\":\"Targets\",\"text\":[\"<a href='http://cdsportal.u-strasbg.fr/?target=31.9309548+-5.6268840'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=31.9309548d-5.6268840d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=31.9538443+-5.7980120'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=31.9538443d-5.7980120d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=31.9741113+-5.8773380'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=31.9741113d-5.8773380d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=31.9890415+-5.6858169'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=31.9890415d-5.6858169d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.0005320+-5.6935508'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.0005320d-5.6935508d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.0228903+-5.6830786'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.0228903d-5.6830786d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.0401390+-5.6442090'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.0401390d-5.6442090d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.0650278+-5.6030947'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.0650278d-5.6030947d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.0834340+-5.6918443'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.0834340d-5.6918443d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1065928+-5.6187636'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1065928d-5.6187636d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1240501+-5.6766783'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1240501d-5.6766783d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1391437+-5.6582513'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1391437d-5.6582513d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1502586+-5.7586235'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1502586d-5.7586235d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1625340+-5.6914294'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1625340d-5.6914294d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1746643+-5.7065021'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1746643d-5.7065021d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.1957408+-5.6692887'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.1957408d-5.6692887d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.2166499+-5.6978863'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.2166499d-5.6978863d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.2284759+-5.6895905'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.2284759d-5.6895905d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.2586059+-5.7849853'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.2586059d-5.7849853d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.2875215+-5.6952310'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.2875215d-5.6952310d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.3099606+-5.6220169'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.3099606d-5.6220169d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.3207838+-5.6215058'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.3207838d-5.6215058d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.3368831+-5.6281332'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.3368831d-5.6281332d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.3528866+-5.7204662'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.3528866d-5.7204662d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.3688997+-5.7281033'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.3688997d-5.7281033d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.3881211+-5.6096516'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.3881211d-5.6096516d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.4020622+-5.7781286'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.4020622d-5.7781286d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.4201430+-5.6153753'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.4201430d-5.6153753d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.4359121+-5.7282388'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.4359121d-5.7282388d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.4545150+-5.8068110'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.4545150d-5.8068110d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.4691750+-5.7396005'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.4691750d-5.7396005d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.4832373+-5.8575442'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.4832373d-5.8575442d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\",\"<a href='http://cdsportal.u-strasbg.fr/?target=32.5057281+-5.6252093'>.</a> <a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=32.5057281d-5.6252093d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>.</a>\"],\"textfont\":{\"color\":\"black\",\"colorsrc\":\"black\",\"family\":\"sans serif\",\"size\":18},\"x\":[-12.124363143092436,-11.168601467757734,-10.315675874887198,-9.69761634952174,-9.216535929481207,-8.279532138919846,-7.628584851545311,-6.510037761998716,-5.739608179302061,-4.765844298992474,-4.0335013796432975,-3.399075153997561,-2.9321031108200555,-2.4161801612117317,-1.9062504977524444,-1.020015801453887,-0.14086987813327456,0.3564024966108478,1.623110039325331,2.8388868222131523,4.029694331892832,4.235725408200157,4.912046724380449,5.716843195742949,6.301348037495965,7.061867723612497,7.648128638095077,8.404550874295758,9.06770039601797,9.771534623115908,10.460199758701778,11.262033030348617,11.985736813186227],\"y\":[5.186213354112832,-2.0276771199112784,-5.372622856759849,2.7063293101006436,2.380567907722151,2.8234756131008654,4.464452298570341,6.199911292753407,2.455600549479822,5.541253833371377,3.0971190895266543,3.875618770406978,-0.36457134342155073,2.474701933436038,1.8380091643824448,3.4102904904238884,2.202232672914516,2.552727300401704,-1.4784731061587664,2.3139724546270233,5.404865811694566,5.42605599856655,5.145794321566988,1.3732291195491275,0.9240076719610313,5.922618464944924,-1.2310091225757067,5.679054062123038,0.9167860615867152,-2.3991833288308584,0.43648627971980924,-4.5376530687569,5.257080537038755],\"type\":\"scatter\"},{\"hovertext\":[\"phot_g_mean_mag = 8.888919<br>phot_rp_mean_mag = 8.218514<br>phot_bp_mean_mag = 9.392682<br>source_id = 2491075538417389824<br>\",\"phot_g_mean_mag = 9.412196<br>phot_rp_mean_mag = 8.721784<br>phot_bp_mean_mag = 9.953414<br>source_id = 2491132403784383104<br>\",\"phot_g_mean_mag = 9.870421<br>phot_rp_mean_mag = 9.183941<br>phot_bp_mean_mag = 9.928847<br>source_id = 2491061657083113088<br>\",\"phot_g_mean_mag = 10.026814<br>phot_rp_mean_mag = 9.622477<br>phot_bp_mean_mag = 10.269765<br>source_id = 2491071724486457088<br>\",\"phot_g_mean_mag = 10.267825<br>phot_rp_mean_mag = 9.743511<br>phot_bp_mean_mag = 10.625723<br>source_id = 2490686311301204992<br>\",\"phot_g_mean_mag = 10.309307<br>phot_rp_mean_mag = 9.6606655<br>phot_bp_mean_mag = 10.80049<br>source_id = 2491159238740067456<br>\",\"phot_g_mean_mag = 10.459755<br>phot_rp_mean_mag = 10.040787<br>phot_bp_mean_mag = 10.718258<br>source_id = 2490674766429112064<br>\",\"phot_g_mean_mag = 10.833191<br>phot_rp_mean_mag = 10.112401<br>phot_bp_mean_mag = 11.419034<br>source_id = 2491087633045312256<br>\",\"phot_g_mean_mag = 10.992749<br>phot_rp_mean_mag = 10.584285<br>phot_bp_mean_mag = 11.240956<br>source_id = 2490690949865880960<br>\",\"phot_g_mean_mag = 11.011339<br>phot_rp_mean_mag = 10.398765<br>phot_bp_mean_mag = 11.463189<br>source_id = 2491161467827722624<br>\",\"phot_g_mean_mag = 11.057941<br>phot_rp_mean_mag = 10.359118<br>phot_bp_mean_mag = 11.61371<br>source_id = 2491150099049625344<br>\",\"phot_g_mean_mag = 11.16525<br>phot_rp_mean_mag = 10.753346<br>phot_bp_mean_mag = 11.423127<br>source_id = 2488059371863978752<br>\",\"phot_g_mean_mag = 11.190608<br>phot_rp_mean_mag = 10.765085<br>phot_bp_mean_mag = 11.460591<br>source_id = 2491124638483515392<br>\",\"phot_g_mean_mag = 11.197132<br>phot_rp_mean_mag = 10.7103195<br>phot_bp_mean_mag = 11.517558<br>source_id = 2490693866148389504<br>\",\"phot_g_mean_mag = 11.289871<br>phot_rp_mean_mag = 10.947932<br>phot_bp_mean_mag = 11.491173<br>source_id = 2491073957869447296<br>\",\"phot_g_mean_mag = 11.414862<br>phot_rp_mean_mag = 10.838153<br>phot_bp_mean_mag = 11.833785<br>source_id = 2490739122219054336<br>\",\"phot_g_mean_mag = 11.542027<br>phot_rp_mean_mag = 11.161116<br>phot_bp_mean_mag = 11.766571<br>source_id = 2490696997179829888<br>\",\"phot_g_mean_mag = 11.554783<br>phot_rp_mean_mag = 10.541661<br>phot_bp_mean_mag = 11.33073<br>source_id = 2491161128525874432<br>\",\"phot_g_mean_mag = 11.594977<br>phot_rp_mean_mag = 11.131808<br>phot_bp_mean_mag = 11.88419<br>source_id = 2490669887346284544<br>\",\"phot_g_mean_mag = 11.774987<br>phot_rp_mean_mag = 11.197317<br>phot_bp_mean_mag = 12.187165<br>source_id = 2491153118411298688<br>\",\"phot_g_mean_mag = 11.77985<br>phot_rp_mean_mag = 11.3216505<br>phot_bp_mean_mag = 12.070332<br>source_id = 2490749052183457024<br>\",\"phot_g_mean_mag = 11.793097<br>phot_rp_mean_mag = 11.29496<br>phot_bp_mean_mag = 12.128817<br>source_id = 2491076049518145024<br>\",\"phot_g_mean_mag = 11.823036<br>phot_rp_mean_mag = 11.293506<br>phot_bp_mean_mag = 12.187378<br>source_id = 2491159818560281472<br>\",\"phot_g_mean_mag = 11.824908<br>phot_rp_mean_mag = 11.350006<br>phot_bp_mean_mag = 12.140412<br>source_id = 2491129307112613120<br>\",\"phot_g_mean_mag = 11.839099<br>phot_rp_mean_mag = 11.282302<br>phot_bp_mean_mag = 12.229448<br>source_id = 2491065883330962688<br>\",\"phot_g_mean_mag = 11.849492<br>phot_rp_mean_mag = 11.383371<br>phot_bp_mean_mag = 12.154962<br>source_id = 2491108278952737536<br>\",\"phot_g_mean_mag = 11.89441<br>phot_rp_mean_mag = 11.361519<br>phot_bp_mean_mag = 12.273015<br>source_id = 2491113299770058112<br>\",\"phot_g_mean_mag = 11.915823<br>phot_rp_mean_mag = 11.403827<br>phot_bp_mean_mag = 12.258561<br>source_id = 2490753583373354240<br>\",\"phot_g_mean_mag = 11.94817<br>phot_rp_mean_mag = 11.452073<br>phot_bp_mean_mag = 12.282828<br>source_id = 2491054819495182464<br>\",\"phot_g_mean_mag = 11.964093<br>phot_rp_mean_mag = 11.557754<br>phot_bp_mean_mag = 12.211076<br>source_id = 2490690945570823808<br>\",\"phot_g_mean_mag = 11.965682<br>phot_rp_mean_mag = 11.472141<br>phot_bp_mean_mag = 12.266626<br>source_id = 2490754137424710400<br>\"],\"marker\":{\"line\":{\"width\":1},\"showscale\":false,\"size\":15,\"symbol\":[\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\"]},\"mode\":\"markers+text\",\"name\":\"Guiding stars\",\"text\":[\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-5.9407661d0.2742408d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-8.9455660d14.4918361d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=3.5044436d0.2652926d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=0.0624434d-1.1205765d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-13.4050030d-12.4101280d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=6.0797759d16.9623106d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-9.5485584d-12.3785252d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=3.3851271d11.3020535d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-15.9461392d-7.4392554d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=10.4524966d20.0643640d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-17.9394386d20.3115241d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=16.9919801d-3.3638569d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-6.5090763d6.1994704d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-7.8010753d-5.9348967d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=2.8456586d2.3149960d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-20.0855252d-5.6176091d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-4.9835834d-1.5415883d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=4.0339911d20.6781461d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-7.8718872d-16.8158188d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-4.5116124d20.8701250d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-15.2683889d2.1216621d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-5.7379742d2.4542906d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=8.1561131d18.7562179d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-11.0124612d10.3324334d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=15.6767947d3.3316554d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=12.3737143d14.1289983d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=11.3531900d17.5865652d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-18.3642973d6.3258705d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=4.5932721d-6.5068718d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-15.8908442d-7.4393716d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-16.4582008d7.8701865d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\"],\"textfont\":{\"color\":\"black\",\"colorsrc\":\"black\",\"family\":\"sans serif\",\"size\":18},\"x\":[-5.940766111845687,-8.94556596680634,3.5044435681386177,0.06244343310837054,-13.405002966892518,6.0797758567402465,-9.548558444419331,3.3851270828062447,-15.946139205893497,10.452496632413682,-17.939438605209887,16.991980129755813,-6.50907632243845,-7.801075342035295,2.845658632298935,-20.085525211547832,-4.983583409326511,4.033991146425954,-7.871887245780807,-4.511612359907181,-15.268388879069427,-5.7379742455122384,8.156113097819869,-11.012461227002868,15.676794662236247,12.373714334110518,11.353189983074873,-18.36429725554412,4.5932721438159705,-15.890844206879585,-16.458200792979707],\"y\":[0.2742408399147768,14.491836121963892,0.2652926113914291,-1.1205765306384396,-12.410128032989105,16.96231056945474,-12.378525176715943,11.30205350275794,-7.439255376057763,20.06436398827043,20.311524073939697,-3.3638568740056627,6.199470408476514,-5.9348966554736595,2.314996023433331,-5.617609074475752,-1.5415882965907526,20.678146076103758,-16.815818813583423,20.870124966812874,2.121662073763776,2.454290608562599,18.756217928571687,10.332433404734642,3.3316553547159895,14.12899834293188,17.58656519019725,6.325870533604968,-6.506871831923076,-7.439371563890869,7.8701865016866215],\"type\":\"scatter\"},{\"hovertext\":[\"Z_VALUE = -6e-06<br>FLUX_U = nan<br>FLUX_B = 10.61<br>FLUX_G = 10.026814<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = -9.8e-05<br>FLUX_U = nan<br>FLUX_B = 12.76<br>FLUX_G = 12.132396<br>FLUX_u = 14.88<br>FLUX_g = 12.567<br>FLUX_r = 12.229<br>OTYPE = Star<br>\",\"Z_VALUE = -2.1e-05<br>FLUX_U = nan<br>FLUX_B = 10.362<br>FLUX_G = 9.870421<br>FLUX_u = nan<br>FLUX_g = 10.3<br>FLUX_r = 9.795<br>OTYPE = PM*<br>\",\"Z_VALUE = -0.000109<br>FLUX_U = nan<br>FLUX_B = 11.774<br>FLUX_G = 11.289871<br>FLUX_u = nan<br>FLUX_g = 11.531<br>FLUX_r = 11.334<br>OTYPE = PM*<br>\",\"Z_VALUE = 0.000124<br>FLUX_U = nan<br>FLUX_B = 11.98<br>FLUX_G = 11.542027<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = 4e-06<br>FLUX_U = nan<br>FLUX_B = 10.17<br>FLUX_G = 8.888919<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = 5.8e-05<br>FLUX_U = nan<br>FLUX_B = 12.49<br>FLUX_G = 11.793097<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = 0.000105<br>FLUX_U = nan<br>FLUX_B = 12.8<br>FLUX_G = 11.94817<br>FLUX_u = 15.154<br>FLUX_g = 12.618<br>FLUX_r = 11.976<br>OTYPE = Star<br>\",\"Z_VALUE = 2.6e-05<br>FLUX_U = nan<br>FLUX_B = 11.837<br>FLUX_G = 11.190608<br>FLUX_u = nan<br>FLUX_g = 11.52<br>FLUX_r = 11.211<br>OTYPE = Star<br>\",\"Z_VALUE = -3.7e-05<br>FLUX_U = nan<br>FLUX_B = 11.97<br>FLUX_G = 11.197132<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = PM*<br>\",\"Z_VALUE = 7e-06<br>FLUX_U = nan<br>FLUX_B = 13.018<br>FLUX_G = 12.181354<br>FLUX_u = 15.18<br>FLUX_g = 12.88<br>FLUX_r = 12.225<br>OTYPE = Star<br>\",\"Z_VALUE = -4e-05<br>FLUX_U = nan<br>FLUX_B = 12.355<br>FLUX_G = 10.833191<br>FLUX_u = nan<br>FLUX_g = 11.704<br>FLUX_r = 10.773<br>OTYPE = Star<br>\",\"Z_VALUE = 0.000128<br>FLUX_U = nan<br>FLUX_B = 13.574<br>FLUX_G = 12.5093<br>FLUX_u = 15.681<br>FLUX_g = 13.424<br>FLUX_r = 12.526<br>OTYPE = PM*<br>\",\"Z_VALUE = -2.1e-05<br>FLUX_U = nan<br>FLUX_B = 12.598<br>FLUX_G = 11.824908<br>FLUX_u = nan<br>FLUX_g = 12.233<br>FLUX_r = 11.816<br>OTYPE = Star<br>\",\"Z_VALUE = 0.000148<br>FLUX_U = nan<br>FLUX_B = 13.467<br>FLUX_G = 12.048131<br>FLUX_u = 15.861<br>FLUX_g = 13.784<br>FLUX_r = 12.021<br>OTYPE = Star<br>\",\"Z_VALUE = 0.000125<br>FLUX_U = nan<br>FLUX_B = 12.28<br>FLUX_G = 11.77985<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = -1.4e-05<br>FLUX_U = nan<br>FLUX_B = 11.112<br>FLUX_G = 10.459755<br>FLUX_u = nan<br>FLUX_g = 10.817<br>FLUX_r = 10.485<br>OTYPE = Star<br>\",\"Z_VALUE = 9e-06<br>FLUX_U = nan<br>FLUX_B = 12.89<br>FLUX_G = 11.839099<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = -3.4e-05<br>FLUX_U = nan<br>FLUX_B = 10.83<br>FLUX_G = 9.412196<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Candidate_RGB*<br>\",\"Z_VALUE = -3.6e-05<br>FLUX_U = nan<br>FLUX_B = 11.803<br>FLUX_G = 11.16525<br>FLUX_u = nan<br>FLUX_g = 11.496<br>FLUX_r = 11.172<br>OTYPE = Star<br>\",\"Z_VALUE = 9.5e-05<br>FLUX_U = nan<br>FLUX_B = 11.28<br>FLUX_G = 10.992749<br>FLUX_u = nan<br>FLUX_g = 11.02<br>FLUX_r = 10.67<br>OTYPE = Star<br>\",\"Z_VALUE = -2.4e-05<br>FLUX_U = nan<br>FLUX_B = 12.307<br>FLUX_G = 12.220921<br>FLUX_u = 14.577<br>FLUX_g = 12.404<br>FLUX_r = 11.779<br>OTYPE = Star<br>\",\"Z_VALUE = 2.9e-05<br>FLUX_U = nan<br>FLUX_B = 11.514<br>FLUX_G = 10.309307<br>FLUX_u = nan<br>FLUX_g = 10.985<br>FLUX_r = 10.279<br>OTYPE = Star<br>\",\"Z_VALUE = -0.000179<br>FLUX_U = nan<br>FLUX_B = 12.72<br>FLUX_G = 11.965682<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = 2.9e-05<br>FLUX_U = nan<br>FLUX_B = 11.173<br>FLUX_G = 10.267825<br>FLUX_u = nan<br>FLUX_g = 10.784<br>FLUX_r = 10.243<br>OTYPE = Star<br>\",\"Z_VALUE = 2.7e-05<br>FLUX_U = nan<br>FLUX_B = 12.317<br>FLUX_G = 11.594977<br>FLUX_u = nan<br>FLUX_g = 12.0<br>FLUX_r = 11.61<br>OTYPE = PM*<br>\",\"Z_VALUE = 4e-05<br>FLUX_U = nan<br>FLUX_B = 12.86<br>FLUX_G = 11.849492<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = nan<br>FLUX_U = nan<br>FLUX_B = 12.37<br>FLUX_G = 12.164862<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = 6e-05<br>FLUX_U = nan<br>FLUX_B = 13.04<br>FLUX_G = 11.915823<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Star<br>\",\"Z_VALUE = -4.7e-05<br>FLUX_U = nan<br>FLUX_B = 12.72<br>FLUX_G = 11.823036<br>FLUX_u = nan<br>FLUX_g = 12.289<br>FLUX_r = 11.807<br>OTYPE = Star<br>\",\"Z_VALUE = 0.017909<br>FLUX_U = nan<br>FLUX_B = 14.3<br>FLUX_G = nan<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = Galaxy<br>\",\"Z_VALUE = 6.5e-05<br>FLUX_U = nan<br>FLUX_B = 12.5<br>FLUX_G = 11.414862<br>FLUX_u = nan<br>FLUX_g = nan<br>FLUX_r = nan<br>OTYPE = PM*<br>\",\"Z_VALUE = -1.7e-05<br>FLUX_U = nan<br>FLUX_B = 12.843<br>FLUX_G = 11.89441<br>FLUX_u = nan<br>FLUX_g = 12.389<br>FLUX_r = 11.862<br>OTYPE = Star<br>\"],\"marker\":{\"line\":{\"width\":1},\"showscale\":false,\"size\":15,\"symbol\":[\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\",\"diamond-x-open\"]},\"mode\":\"markers+text\",\"name\":\"Guiding stars\",\"text\":[\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=0.0662542d-1.1147663d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=1.4528670d-2.7562463d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=3.4935311d0.2743347d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=2.8285278d2.3181381d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-4.9838245d-1.5419756d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-5.9424450d0.2761065d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-5.7402961d2.4566154d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=4.5930831d-6.5084174d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-6.5093091d6.1992044d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-7.8087469d-5.9273325d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-8.6782657d-6.9883294d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=3.3857325d11.3026500d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=8.3210739d-8.9043754d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-11.0109132d10.3352911d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=14.7186789d4.3055028d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-15.2666577d2.1211555d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-9.5453048d-12.3738701d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=15.6709262d3.3333684d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-8.9447102d14.4923846d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=16.9909097d-3.3608104d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-15.9478630d-7.4401532d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=8.6421508d15.5306139d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=6.0794936d16.9629912d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-16.4603987d7.8733661d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-13.4033492d-12.4104094d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-7.8635815d-16.8101687d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=12.3699166d14.1280026d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-2.8799389d-18.6388388d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-18.3640155d6.3245187d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=8.1550280d18.7595631d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=6.2560722d-19.5387020d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=-20.0951052d-5.6181713d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\",\"<a href='http://simbad.u-strasbg.fr/simbad/sim-coo?Coord=11.3537988d17.5914684d&CooFrame=FK5&CooEpoch=2000&CooEqui=2000&CooDefinedFrames=none&Radius=2&Radius.unit=arcmin'>-</a>\"],\"textfont\":{\"color\":\"black\",\"colorsrc\":\"black\",\"family\":\"sans serif\",\"size\":18},\"x\":[0.06625424851339758,1.452867045900357,3.4935310619181,2.828527777192136,-4.983824481937471,-5.942444976943529,-5.740296122079258,4.593083112630839,-6.509309081593841,-7.808746886162139,-8.678265704611565,3.385732538852183,8.32107391239042,-11.010913186972104,14.718678867467998,-15.266657709576823,-9.545304794264332,15.670926223008665,-8.944710219318356,16.9909096674383,-15.947862958181428,8.642150793343315,6.079493551301592,-16.46039866545317,-13.403349164282229,-7.86358146921403,12.369916589399468,-2.879938862960385,-18.364015494008207,8.155028029409403,6.256072191258578,-20.095105189656703,11.353798769289826],\"y\":[-1.1147662543478367,-2.756246262096204,0.2743346649045412,2.318138144296972,-1.5419755934619868,0.2761065192375474,2.4566154364298725,-6.508417381953679,6.199204387400459,-5.927332504688179,-6.988329411104693,11.302650021051141,-8.904375411633374,10.33529114065329,4.305502768175586,2.1211555104043662,-12.373870052490382,3.3333684385382725,14.492384595327632,-3.360810400724025,-7.440153243070572,15.53061385298396,16.962991174333432,7.873366051861532,-12.410409444430154,-16.810168650381996,14.128002581158576,-18.63883879680067,6.324518719905489,18.75956313975773,-19.53870196069527,-5.61817125471603,17.591468391647805],\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\"},\"name\":\"nuv_mag (33 sources)\",\"opacity\":0.5,\"x\":[22.732,22.941,23.027,23.318,23.088,-99.0,-99.0,22.888,23.495,24.261,24.073,23.138,24.466,24.181,23.355,23.842,23.336,22.348,23.83,23.383,22.696,23.363,23.027,-99.0,24.639,-99.0,23.635,24.849,-1.0,-1.0,-1.0,-1.0,-1.0],\"xaxis\":\"x2\",\"xbins\":{\"end\":25,\"size\":0.2,\"start\":15},\"yaxis\":\"y2\",\"type\":\"histogram\"}], {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"shapes\":[{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-12.329113143092437,\"x1\":-11.919613143092436,\"y0\":5.148188354112832,\"y1\":5.224238354112832},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-12.329113143092437,\"x1\":-11.919613143092436,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-12.465976694050111,\"x1\":-12.05647669405011,\"y0\":5.196865627508981,\"y1\":5.272915627508981},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-11.373351467757734,\"x1\":-10.963851467757733,\"y0\":-2.0657021199112786,\"y1\":-1.9896521199112784},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-11.373351467757734,\"x1\":-10.963851467757733,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-11.496058976392115,\"x1\":-11.086558976392114,\"y0\":-2.0850168730779832,\"y1\":-2.008966873077983},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-10.520425874887199,\"x1\":-10.110925874887197,\"y0\":-5.410647856759849,\"y1\":-5.334597856759848},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-10.520425874887199,\"x1\":-10.110925874887197,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-10.635038236212429,\"x1\":-10.225538236212428,\"y0\":-5.460135007310235,\"y1\":-5.384085007310235},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-9.90236634952174,\"x1\":-9.492866349521739,\"y0\":2.6683043101006434,\"y1\":2.744354310100644},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-9.90236634952174,\"x1\":-9.492866349521739,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-10.004989164838703,\"x1\":-9.595489164838702,\"y0\":2.6921987719706277,\"y1\":2.768248771970628},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-9.421285929481208,\"x1\":-9.011785929481206,\"y0\":2.3425429077221507,\"y1\":2.418592907722151},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-9.421285929481208,\"x1\":-9.011785929481206,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-9.517409714784199,\"x1\":-9.107909714784197,\"y0\":2.3633195875080792,\"y1\":2.4393695875080796},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-8.484282138919847,\"x1\":-8.074782138919845,\"y0\":2.785450613100865,\"y1\":2.8615006131008656},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-8.484282138919847,\"x1\":-8.074782138919845,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-8.568665766124441,\"x1\":-8.15916576612444,\"y0\":2.809577768840067,\"y1\":2.8856277688400676},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-7.906459851545311,\"x1\":-7.350709851545311,\"y0\":4.426427298570341,\"y1\":4.502477298570342},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-7.906459851545311,\"x1\":-7.350709851545311,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-7.983505911058939,\"x1\":-7.427755911058939,\"y0\":4.463796445328158,\"y1\":4.539846445328158},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-6.744037761998716,\"x1\":-6.276037761998716,\"y0\":6.176511292753407,\"y1\":6.223311292753406},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-6.744037761998716,\"x1\":-6.276037761998716,\"y0\":-13.396929411764706,\"y1\":-13.350129411764705},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-6.811413388031582,\"x1\":-6.343413388031582,\"y0\":6.226715386227521,\"y1\":6.27351538622752},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-5.973608179302061,\"x1\":-5.505608179302061,\"y0\":2.432200549479822,\"y1\":2.479000549479822},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-5.973608179302061,\"x1\":-5.505608179302061,\"y0\":-13.396929411764706,\"y1\":-13.350129411764705},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-6.0272581546242945,\"x1\":-5.5592581546242945,\"y0\":2.4520002633300106,\"y1\":2.498800263330011},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-4.970594298992474,\"x1\":-4.561094298992474,\"y0\":5.503228833371376,\"y1\":5.579278833371377},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-4.970594298992474,\"x1\":-4.561094298992474,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-5.017351368355291,\"x1\":-4.607851368355291,\"y0\":5.546367953281189,\"y1\":5.6224179532811895},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-4.238251379643297,\"x1\":-3.8287513796432977,\"y0\":3.059094089526654,\"y1\":3.1351440895266545},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-4.238251379643297,\"x1\":-3.8287513796432977,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-4.274052089941103,\"x1\":-3.864552089941103,\"y0\":3.0830153950052623,\"y1\":3.1590653950052627},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-3.603825153997561,\"x1\":-3.1943251539975615,\"y0\":3.837593770406978,\"y1\":3.913643770406978},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-3.603825153997561,\"x1\":-3.1943251539975615,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-3.6341290558116706,\"x1\":-3.22462905581167,\"y0\":3.8669587982693803,\"y1\":3.9430087982693807},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-3.1368531108200557,\"x1\":-2.7273531108200553,\"y0\":-0.4025963434215507,\"y1\":-0.32654634342155076},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-3.1368531108200557,\"x1\":-2.7273531108200553,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-3.1604438415977,\"x1\":-2.7509438415976994,\"y0\":-0.40538793433505665,\"y1\":-0.3293379343350567},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-2.6209301612117315,\"x1\":-2.211430161211732,\"y0\":2.4366769334360376,\"y1\":2.512726933436038},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-2.6209301612117315,\"x1\":-2.211430161211732,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-2.6405944541632476,\"x1\":-2.231094454163248,\"y0\":2.455032517615868,\"y1\":2.5310825176158684},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-2.1110004977524444,\"x1\":-1.7015004977524444,\"y0\":1.7999841643824448,\"y1\":1.8760341643824447},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-2.1110004977524444,\"x1\":-1.7015004977524444,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-2.125730956404402,\"x1\":-1.7162309564044016,\"y0\":1.8134498428574337,\"y1\":1.8894998428574337},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-1.224765801453887,\"x1\":-0.8152658014538869,\"y0\":3.3722654904238882,\"y1\":3.4483154904238886},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-1.224765801453887,\"x1\":-0.8152658014538869,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-1.2334307853311628,\"x1\":-0.8239307853311628,\"y0\":3.396473273974743,\"y1\":3.4725232739747436},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-0.34561987813327455,\"x1\":0.06388012186672543,\"y0\":2.164207672914516,\"y1\":2.2402576729145163},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":-0.34561987813327455,\"x1\":0.06388012186672543,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":-0.34659391189787975,\"x1\":0.06290608810212023,\"y0\":2.179478850053027,\"y1\":2.2555288500530275},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":0.1516524966108478,\"x1\":0.5611524966108478,\"y0\":2.5147023004017037,\"y1\":2.590752300401704},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":0.1516524966108478,\"x1\":0.5611524966108478,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":0.15386461455732892,\"x1\":0.5633646145573289,\"y0\":2.532087901541384,\"y1\":2.6081379015413844},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":1.418360039325331,\"x1\":1.827860039325331,\"y0\":-1.5164981061587663,\"y1\":-1.4404481061587664},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":1.418360039325331,\"x1\":1.827860039325331,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":1.429038745994456,\"x1\":1.838538745994456,\"y0\":-1.5262284284672427,\"y1\":-1.4501784284672428},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":2.6048868222131523,\"x1\":3.0728868222131522,\"y0\":2.1969724546270233,\"y1\":2.4309724546270233},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":2.6048868222131523,\"x1\":3.0728868222131522,\"y0\":-13.490529411764706,\"y1\":-13.256529411764705},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":2.62095668213168,\"x1\":3.08895668213168,\"y0\":2.2112790785873706,\"y1\":2.4452790785873706},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":3.5763193318928326,\"x1\":4.483069331892833,\"y0\":5.366840811694566,\"y1\":5.442890811694566},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":3.5763193318928326,\"x1\":4.483069331892833,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":3.59171844157166,\"x1\":4.49846844157166,\"y0\":5.39822100729141,\"y1\":5.47427100729141},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":4.235725408200157,\"x1\":4.235725408200157,\"y0\":5.42605599856655,\"y1\":5.42605599856655},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":4.235725408200157,\"x1\":4.235725408200157,\"y0\":-13.373529411764705,\"y1\":-13.373529411764705},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":4.2523335738923285,\"x1\":4.2523335738923285,\"y0\":5.456788125777109,\"y1\":5.456788125777109},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":4.707296724380449,\"x1\":5.116796724380449,\"y0\":5.1077693215669875,\"y1\":5.183819321566988},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":4.707296724380449,\"x1\":5.116796724380449,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":4.725853827361628,\"x1\":5.1353538273616275,\"y0\":5.135853624401049,\"y1\":5.2119036244010495},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":5.3804681957429485,\"x1\":6.053218195742949,\"y0\":1.3147291195491275,\"y1\":1.4317291195491275},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":5.3804681957429485,\"x1\":6.053218195742949,\"y0\":-13.432029411764706,\"y1\":-13.315029411764705},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":5.404812774771635,\"x1\":6.077562774771636,\"y0\":1.321384665808649,\"y1\":1.438384665808649},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":6.1404730374959655,\"x1\":6.462223037495965,\"y0\":0.8859826719610313,\"y1\":0.9620326719610313},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":6.1404730374959655,\"x1\":6.462223037495965,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":6.165512111458815,\"x1\":6.487262111458815,\"y0\":0.8906740308477954,\"y1\":0.9667240308477953},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":6.857117723612498,\"x1\":7.266617723612497,\"y0\":5.884593464944924,\"y1\":5.9606434649449245},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":6.857117723612498,\"x1\":7.266617723612497,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":6.874361356476237,\"x1\":7.283861356476237,\"y0\":5.91193392272738,\"y1\":5.987983922727381},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":7.443378638095077,\"x1\":7.852878638095077,\"y0\":-1.2778091225757067,\"y1\":-1.1842091225757068},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":7.443378638095077,\"x1\":7.852878638095077,\"y0\":-13.420329411764705,\"y1\":-13.326729411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":7.467806284982071,\"x1\":7.877306284982071,\"y0\":-1.283556500066261,\"y1\":-1.189956500066261},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":8.199800874295757,\"x1\":8.609300874295759,\"y0\":5.641029062123038,\"y1\":5.717079062123038},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":8.199800874295757,\"x1\":8.609300874295759,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":8.214626262193779,\"x1\":8.62412626219378,\"y0\":5.664066699770595,\"y1\":5.740116699770596},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":8.86295039601797,\"x1\":9.272450396017971,\"y0\":0.8787610615867152,\"y1\":0.9548110615867151},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":8.86295039601797,\"x1\":9.272450396017971,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":8.884048609336254,\"x1\":9.293548609336256,\"y0\":0.882331132318457,\"y1\":0.9583811323184569},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":9.493659623115908,\"x1\":10.049409623115908,\"y0\":-2.4372083288308586,\"y1\":-2.361158328830858},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":9.493659623115908,\"x1\":10.049409623115908,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":9.51071548094523,\"x1\":10.06646548094523,\"y0\":-2.4465035400757507,\"y1\":-2.3704535400757503},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":10.255449758701777,\"x1\":10.664949758701779,\"y0\":0.39846127971980927,\"y1\":0.4745112797198092},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":10.255449758701777,\"x1\":10.664949758701779,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":10.270863323450724,\"x1\":10.680363323450726,\"y0\":0.39972604769480186,\"y1\":0.4757760476948018},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":10.837908030348617,\"x1\":11.686158030348617,\"y0\":-4.5756780687569005,\"y1\":-4.4996280687569},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":10.837908030348617,\"x1\":11.686158030348617,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":10.843678112266645,\"x1\":11.691928112266645,\"y0\":-4.589763074541237,\"y1\":-4.513713074541236},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":11.780986813186226,\"x1\":12.190486813186228,\"y0\":5.219055537038755,\"y1\":5.295105537038755},{\"line\":{\"color\":\"black\",\"width\":2},\"type\":\"rect\",\"x0\":11.780986813186226,\"x1\":12.190486813186228,\"y0\":-13.411554411764705,\"y1\":-13.335504411764706},{\"line\":{\"color\":\"green\",\"width\":2},\"type\":\"rect\",\"x0\":11.77556686005984,\"x1\":12.185066860059841,\"y0\":5.2307023834762525,\"y1\":5.306752383476253},{\"line\":{\"color\":\"black\"},\"type\":\"rect\",\"x0\":-13,\"x1\":13,\"y0\":-6.56,\"y1\":6.44},{\"line\":{\"color\":\"black\",\"dash\":\"dot\"},\"type\":\"rect\",\"x0\":-6.76,\"x1\":6.76,\"y0\":-15,\"y1\":1.6400000000000006},{\"line\":{\"color\":\"black\"},\"type\":\"circle\",\"x0\":-16.941176470588236,\"x1\":16.941176470588236,\"xref\":\"x\",\"y0\":-16.941176470588236,\"y1\":16.941176470588236,\"yref\":\"y\"}],\"barmode\":\"stack\",\"yaxis\":{\"scaleanchor\":\"x\",\"scaleratio\":1,\"title\":{\"text\":\"Y(mm)\"},\"range\":[-16.941176470588236,16.941176470588236],\"showgrid\":false},\"title\":{\"text\":\"\"},\"xaxis\":{\"title\":{\"text\":\"X (mm)\"},\"range\":[-16.941176470588236,16.941176470588236],\"showgrid\":false},\"legend\":{\"title\":{\"text\":\"Legend\"}},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.3,0.7]},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.75,0.9]},\"height\":900,\"paper_bgcolor\":\"rgba(0,0,0,0)\",\"plot_bgcolor\":\"rgba(0,0,0,0)\",\"width\":900}, {\"responsive\": true} ) };","title":"License"},{"location":"philosophy/","text":"Motivation Current fits viewer applications ( SAOImage DS9 , Aladin , GINGA , Glue ) have been developed to optimize the visualization of astronomical images while keeping some interesting specificities: linked-data exploration, interactive sky atlas access, flexible and extensible visualization toolkit, etc. Not initially designed for image processing, these applications do not address this need as it would break their conceptual integrity (by dispersing their purpose). This leaves it to big instrument consortiums who will design their own data processing pipeline, which will, most of the time, be too specific to be re-used by the astronomy community. For the particular discipline of astronomy evolving towards Jim Gray's fourth paradigm and where an essential part of the job relies on image analysis, the lack of processing codes draws a new challenge for current and future imaging software: mimicking what has been done for bioimage analysis by addressing the current frontier of image processing. Among the different difficulties that need to be addressed to make the processing software beneficial (catalyzing community collaboration and code enhancement, multi-image analysis, extensibility), one key aspect is to keep the essential high-level interactivity between the data and the user, which became a consensual feature for visualization. For various reasons that I will present, the development of plugins for fits viewer applications represents an exciting way to take up the challenge of developing image processing tools and address the related difficulties. I will then use introduce pyds9plugin : an attempt to design such a plugin. This DS9 quick look plugin is a public domain versatile extension I designed for DS9 visualization software. The plugin pushes DS9 visualization software a step further by allowing to analyze and process in real-time images while keeping a high level of interactivity. The processing functions can then be generalized automatically to a set of images to turn the quick-look tool into a multiprocessing pipeline. This plugin incorporates essential functions (radial profile, 2D/3D fitting, trough-focus, stacking, background removal, source/artifact extraction, etc.) to extract quantitative and intelligible information from imaging datasets in order to support instrumentation, reduce observations, analyze data performance, etc. We also linked the most famous astronomical codes ( SExtractor , Swarp , etc.) to the plugin to allow research-grade analysis and processing. As all researchers have different needs, the plugin is designed intelligibly to allow everyone to add their own macros that can then be run quickly and automatically on a set of images thanks to multiprocessing. This pyds9plugin , available both on Pypi and Github, tries to gather a glimpse of all the possibilities that offers DS9 extensibility so that it motivates astronomers exploring this development approach. This hybrid chapter aims at giving an overview of the achieved work. Existing tools Existing tools, strengths and weaknesses The different main existing software for image visualization/processing are SAOImageDS9 , Aladin , Ginga and GlueViz . Some other non-astronomy-related image processing codes have developed astronomy plugins like ImageJ and Icy . Next Figure sum up each software approach and different characteristics as well as their different strengths and weaknesses in terms of image visualization and processing. On a total of about 127,000 downloads, Aladin , DS9 , GlueViz , and Ginga represent respectively 36%, 28%, 20%, and 8% percent of the total downloads. Main image visualization/processing applications in astronomy. Native features are marked as V \\(_n\\) while feature added via plugins are marked as V \\(_p\\) . This table is based on a survey sent to fits viewers lead developers. In the survey, we called basic image processing radial profile, light curve, source extraction, etc. and high-level analysis: deconvolution, Fourier transform, etc. There seems to be some consensus on the interest of plugins to extend the possibilities of each software as only one software does not currently allow it. It also appears difficult for applications to incorporate the different listed functionality as native features. Most of the extensions need to be written in JAVA, some in Python, and DS9 allows to develop low-level plugins in basically any language as soon as it supports XPA or SAMP communication. The need for collaborative development DS9 lead developers remind that more bodies do not equal better results by citing Fred Brooks: \" the [software] design must proceed from one mind, or from a very small number of agreeing resonant minds \". Even though they believe that conceptual integrity requires a small team of developers, they face an expanding pressure due to the success of DS9 and confess spending 80% of their time in supporting users and maintaining/enhancing existing capabilities which leaves them with only 20% of time to innovate on new functionality. On the other side, I saw significant efforts in different teams to develop project-related processing tools and pipelines to analyze images, but they often are too specific to be re-used by the community and then stay within the collaboration that produced them. Agreeing with the fact that conceptual integrity requires a small team which unfortunately leads to much less time to innovate when the product gains maturity, it seems that the best compromise is the development of plugins by the community: This allows important and free innovation that will not break the software's concept/purpose Best interesting features/innovations that will emerge by themselves can then be merged into the initial software (as it has already been done for DS9 , GAIA ) This is particularly true in the open astronomy community where collaborative development becomes extremely popular This modularity and plugin philosophy is used by the majority of the top 10 open-source software: VLC , Libre Office , Firefox , Thunderbird , and by other fast-growing software: Nextcloud , Mattermost , Atom . This trend is similar for open-source image analysis software: GIMP , ImageJ , GINGA , Icy , Starlink , etc. Note A plugin is a software component or module designed to extend the functionality of an existing software application. The application architecture determines where and how plugins can be embedded (for example, reading or writing new formats, accessing and processing image data, etc.). Open-source software, in contrast to closed-source packages, often relies on plugins to foster contributions and expertise from the community Goals The goal is then to create a plugin that would fill the needs expressed above. The three different distant objectives that aim to make astronomers gain time are detailed below. Boosting interaction with scientific images The fact that astronomical data gets bigger is driving the way image software and pipelines are designed. It seems that the workforce is more directed towards developing specific applications (either project-specific : single-project-related pipelines, or big-data specific : web-hosted applications, neural-network-based analysis) rather than improving comprehensive applications working at the pixel layer and enhancing the interaction between the user and the data so that it can be used by a broader community. Specific applications listed above are important but will not fill the need that each astronomical project requires at some point a local and high-performance image processing software to work at the pixel level with improved interactivity. Current local and easy-to-use applications would still greatly benefit from enhanced interactivity and ergonomy. They represent an excellent test-bench opportunity to implement interactive features before spreading them to other more complex applications (such as web-based or big-data related). The plugin we present in this study will then focus on trying to develop interactive features. Note We call interaction a direct communication between the user and the software which is not only via the menu bar. All basic fits-viewers incorporate as native and interactive feature zooming, panning, rotating, changing scale limits. However, it could be pushed to the next level with, for instance, interaction with metadata (like regions of interest or catalogs), interactive detection and selection of sources, interactive plotting, and profile fitting, etc. Some work is ongoing to make some tools more interactive, but it is still in its infancy. Turning a visualization software into an image processing software Another aspect is that among all the fits-viewers, a minor fraction allows some image processing ( GAIA is the most advanced example but does not seem to gather a vast community, Icy for bio-images, AstroImageJ for light curves). Even though it is not their first purpose, this leaves almost no software to perform basic image processing (source extraction, background subtraction, radial profile, light curve, focus analysis, one-line interpreters, macros, etc.). Incorporating these features inside these fits-viewers might be premature at this stage as it could break the software concept integrity but spending time developing them as a plugin seems essential to make scientists earn time in their research. Building a code collaboration catalyst A byproduct of such plugins would be that people would not need to reinvent the wheel each time they need to perform some basic image processing like a radial profile. Such a plugin could be written to become a code collaboration catalyst which could then fill two important needs: Help people process images with less time or coding proficiency as they could lean on tested and ready-to-use image processing modules instead of making them code existing things. It could become a function aggregator for different types of structures (from the Ph.D. group of a given lab up to the astronomy community) where processing codes would be organized and maintained so that most of the written code within a lab stops disappearing each time a Ph.D. student leaves, or a senior researcher retires. The two issues (implementing existing code and losing unreleased code) represent a significant amount of time/knowledge/money loss. To make this possible the package: should be written in Python (because of the consensual implementation effort in this language in astronomy) as we aim to gather codes/community must be intelligible so that it can be easily re-appropriated and modifiable so that people can add functions to the extension allows running Macros directly The plugin we present in this study is a naive attempt to try to initiate this tendency and gather a glimpse of the main possibilities that fits-viewers plugins can offer. The choice of SAOImage DS9 SAOImage DS9 is an astronomical imaging and data visualization application. It gathers all of the other essential pieces of a modern fits viewer. Its 30 years of development has made it very stable and easy to use. Because of this, it became an essential tool in all fields of astronomy (observation, simulation, instrumentation). Much more profitable but pretty unsung feature; its extensibility makes it a limitless tool to interact with astronomical (or not) data. Unfortunately, it appears that this extensibility did not inspire or generate a large collaborative and well-organized effort to develop significant extensions that would finally, years after years, converge towards a stable/rapid/configurable DS9-affiliated package. The important strengths of DS9 that governed our choice are: Popularity: with ~35K downloads a year, DS9 belongs to the top two leaders in image visualization for astronomy. It also has the closest purpose to what we aim to develop (more image-focused than Aladin, even though it similarly accesses catalogs). It has a large enough community so that designing low-level plugins could work. Any language extensibility: DS9 architecture is set to accept plugins, coded in any language by just sending a Shell command. This is an essential strength in astronomy, where an unprecedented synergy occurs around Python language. Stability and simplicity: With a \" Keep it simple \" golden rule and 30 years of development, DS9 is incredibly simple and stable, which will help the development of our initiative. Indeed such initiatives can have downside effects such as fragmenting the existing community by requiring specific formating/language/etc. DS9 allows ultra-simple extensibility with quasi no format requirement as it simply sends background Shell commands that can call any extension and control the GUI. DS9 then seemed the perfect software to experiment such a plugin. Discussion and conclusion In this chapter, I tried to stress the need for astronomical image processing applications. I emphasize the different requirements of such an application and explain why Python extensions for already proven visualization software represent an exciting approach to address this need. Based on this, I introduced pyds9plugin , a scientific project I developed to illustrate this approach. This plugin has been developed from the ground up, paying attention to three particular aspects: addressing the need for image processing, enhancing the interaction between the user and the data, and catalyzing collaboration for processing functions. Writing DS9 plugins is an excellent way to develop data analysis pipelines and quality assurance tasks by leveraging the combination of the very efficient DS9 application and the burgeoning number of open-source astronomical Python modules. pyds9plugin gathers a glimpse of all possibilities offered by DS9 and stays, for now, a test bench to present such an approach. Even though it still has a considerable number of challenges to face: convince the future users, converge towards research-grade processing, scalability to larger datasets, etc., this chapter shows the ease of such an approach and its numerous benefits. Therefore, implementing processing codes this way generates a pretty high return on investment.","title":"Development philosophy"},{"location":"philosophy/#motivation","text":"Current fits viewer applications ( SAOImage DS9 , Aladin , GINGA , Glue ) have been developed to optimize the visualization of astronomical images while keeping some interesting specificities: linked-data exploration, interactive sky atlas access, flexible and extensible visualization toolkit, etc. Not initially designed for image processing, these applications do not address this need as it would break their conceptual integrity (by dispersing their purpose). This leaves it to big instrument consortiums who will design their own data processing pipeline, which will, most of the time, be too specific to be re-used by the astronomy community. For the particular discipline of astronomy evolving towards Jim Gray's fourth paradigm and where an essential part of the job relies on image analysis, the lack of processing codes draws a new challenge for current and future imaging software: mimicking what has been done for bioimage analysis by addressing the current frontier of image processing. Among the different difficulties that need to be addressed to make the processing software beneficial (catalyzing community collaboration and code enhancement, multi-image analysis, extensibility), one key aspect is to keep the essential high-level interactivity between the data and the user, which became a consensual feature for visualization. For various reasons that I will present, the development of plugins for fits viewer applications represents an exciting way to take up the challenge of developing image processing tools and address the related difficulties. I will then use introduce pyds9plugin : an attempt to design such a plugin. This DS9 quick look plugin is a public domain versatile extension I designed for DS9 visualization software. The plugin pushes DS9 visualization software a step further by allowing to analyze and process in real-time images while keeping a high level of interactivity. The processing functions can then be generalized automatically to a set of images to turn the quick-look tool into a multiprocessing pipeline. This plugin incorporates essential functions (radial profile, 2D/3D fitting, trough-focus, stacking, background removal, source/artifact extraction, etc.) to extract quantitative and intelligible information from imaging datasets in order to support instrumentation, reduce observations, analyze data performance, etc. We also linked the most famous astronomical codes ( SExtractor , Swarp , etc.) to the plugin to allow research-grade analysis and processing. As all researchers have different needs, the plugin is designed intelligibly to allow everyone to add their own macros that can then be run quickly and automatically on a set of images thanks to multiprocessing. This pyds9plugin , available both on Pypi and Github, tries to gather a glimpse of all the possibilities that offers DS9 extensibility so that it motivates astronomers exploring this development approach. This hybrid chapter aims at giving an overview of the achieved work.","title":"Motivation"},{"location":"philosophy/#existing-tools","text":"","title":"Existing tools"},{"location":"philosophy/#existing-tools-strengths-and-weaknesses","text":"The different main existing software for image visualization/processing are SAOImageDS9 , Aladin , Ginga and GlueViz . Some other non-astronomy-related image processing codes have developed astronomy plugins like ImageJ and Icy . Next Figure sum up each software approach and different characteristics as well as their different strengths and weaknesses in terms of image visualization and processing. On a total of about 127,000 downloads, Aladin , DS9 , GlueViz , and Ginga represent respectively 36%, 28%, 20%, and 8% percent of the total downloads. Main image visualization/processing applications in astronomy. Native features are marked as V \\(_n\\) while feature added via plugins are marked as V \\(_p\\) . This table is based on a survey sent to fits viewers lead developers. In the survey, we called basic image processing radial profile, light curve, source extraction, etc. and high-level analysis: deconvolution, Fourier transform, etc. There seems to be some consensus on the interest of plugins to extend the possibilities of each software as only one software does not currently allow it. It also appears difficult for applications to incorporate the different listed functionality as native features. Most of the extensions need to be written in JAVA, some in Python, and DS9 allows to develop low-level plugins in basically any language as soon as it supports XPA or SAMP communication.","title":"Existing tools, strengths and weaknesses"},{"location":"philosophy/#the-need-for-collaborative-development","text":"DS9 lead developers remind that more bodies do not equal better results by citing Fred Brooks: \" the [software] design must proceed from one mind, or from a very small number of agreeing resonant minds \". Even though they believe that conceptual integrity requires a small team of developers, they face an expanding pressure due to the success of DS9 and confess spending 80% of their time in supporting users and maintaining/enhancing existing capabilities which leaves them with only 20% of time to innovate on new functionality. On the other side, I saw significant efforts in different teams to develop project-related processing tools and pipelines to analyze images, but they often are too specific to be re-used by the community and then stay within the collaboration that produced them. Agreeing with the fact that conceptual integrity requires a small team which unfortunately leads to much less time to innovate when the product gains maturity, it seems that the best compromise is the development of plugins by the community: This allows important and free innovation that will not break the software's concept/purpose Best interesting features/innovations that will emerge by themselves can then be merged into the initial software (as it has already been done for DS9 , GAIA ) This is particularly true in the open astronomy community where collaborative development becomes extremely popular This modularity and plugin philosophy is used by the majority of the top 10 open-source software: VLC , Libre Office , Firefox , Thunderbird , and by other fast-growing software: Nextcloud , Mattermost , Atom . This trend is similar for open-source image analysis software: GIMP , ImageJ , GINGA , Icy , Starlink , etc. Note A plugin is a software component or module designed to extend the functionality of an existing software application. The application architecture determines where and how plugins can be embedded (for example, reading or writing new formats, accessing and processing image data, etc.). Open-source software, in contrast to closed-source packages, often relies on plugins to foster contributions and expertise from the community","title":"The need for collaborative development"},{"location":"philosophy/#goals","text":"The goal is then to create a plugin that would fill the needs expressed above. The three different distant objectives that aim to make astronomers gain time are detailed below.","title":"Goals"},{"location":"philosophy/#boosting-interaction-with-scientific-images","text":"The fact that astronomical data gets bigger is driving the way image software and pipelines are designed. It seems that the workforce is more directed towards developing specific applications (either project-specific : single-project-related pipelines, or big-data specific : web-hosted applications, neural-network-based analysis) rather than improving comprehensive applications working at the pixel layer and enhancing the interaction between the user and the data so that it can be used by a broader community. Specific applications listed above are important but will not fill the need that each astronomical project requires at some point a local and high-performance image processing software to work at the pixel level with improved interactivity. Current local and easy-to-use applications would still greatly benefit from enhanced interactivity and ergonomy. They represent an excellent test-bench opportunity to implement interactive features before spreading them to other more complex applications (such as web-based or big-data related). The plugin we present in this study will then focus on trying to develop interactive features. Note We call interaction a direct communication between the user and the software which is not only via the menu bar. All basic fits-viewers incorporate as native and interactive feature zooming, panning, rotating, changing scale limits. However, it could be pushed to the next level with, for instance, interaction with metadata (like regions of interest or catalogs), interactive detection and selection of sources, interactive plotting, and profile fitting, etc. Some work is ongoing to make some tools more interactive, but it is still in its infancy.","title":"Boosting interaction with scientific images"},{"location":"philosophy/#turning-a-visualization-software-into-an-image-processing-software","text":"Another aspect is that among all the fits-viewers, a minor fraction allows some image processing ( GAIA is the most advanced example but does not seem to gather a vast community, Icy for bio-images, AstroImageJ for light curves). Even though it is not their first purpose, this leaves almost no software to perform basic image processing (source extraction, background subtraction, radial profile, light curve, focus analysis, one-line interpreters, macros, etc.). Incorporating these features inside these fits-viewers might be premature at this stage as it could break the software concept integrity but spending time developing them as a plugin seems essential to make scientists earn time in their research.","title":"Turning a visualization software into an image processing software"},{"location":"philosophy/#building-a-code-collaboration-catalyst","text":"A byproduct of such plugins would be that people would not need to reinvent the wheel each time they need to perform some basic image processing like a radial profile. Such a plugin could be written to become a code collaboration catalyst which could then fill two important needs: Help people process images with less time or coding proficiency as they could lean on tested and ready-to-use image processing modules instead of making them code existing things. It could become a function aggregator for different types of structures (from the Ph.D. group of a given lab up to the astronomy community) where processing codes would be organized and maintained so that most of the written code within a lab stops disappearing each time a Ph.D. student leaves, or a senior researcher retires. The two issues (implementing existing code and losing unreleased code) represent a significant amount of time/knowledge/money loss. To make this possible the package: should be written in Python (because of the consensual implementation effort in this language in astronomy) as we aim to gather codes/community must be intelligible so that it can be easily re-appropriated and modifiable so that people can add functions to the extension allows running Macros directly The plugin we present in this study is a naive attempt to try to initiate this tendency and gather a glimpse of the main possibilities that fits-viewers plugins can offer.","title":"Building a code collaboration catalyst"},{"location":"philosophy/#the-choice-of-saoimage-ds9","text":"SAOImage DS9 is an astronomical imaging and data visualization application. It gathers all of the other essential pieces of a modern fits viewer. Its 30 years of development has made it very stable and easy to use. Because of this, it became an essential tool in all fields of astronomy (observation, simulation, instrumentation). Much more profitable but pretty unsung feature; its extensibility makes it a limitless tool to interact with astronomical (or not) data. Unfortunately, it appears that this extensibility did not inspire or generate a large collaborative and well-organized effort to develop significant extensions that would finally, years after years, converge towards a stable/rapid/configurable DS9-affiliated package. The important strengths of DS9 that governed our choice are: Popularity: with ~35K downloads a year, DS9 belongs to the top two leaders in image visualization for astronomy. It also has the closest purpose to what we aim to develop (more image-focused than Aladin, even though it similarly accesses catalogs). It has a large enough community so that designing low-level plugins could work. Any language extensibility: DS9 architecture is set to accept plugins, coded in any language by just sending a Shell command. This is an essential strength in astronomy, where an unprecedented synergy occurs around Python language. Stability and simplicity: With a \" Keep it simple \" golden rule and 30 years of development, DS9 is incredibly simple and stable, which will help the development of our initiative. Indeed such initiatives can have downside effects such as fragmenting the existing community by requiring specific formating/language/etc. DS9 allows ultra-simple extensibility with quasi no format requirement as it simply sends background Shell commands that can call any extension and control the GUI. DS9 then seemed the perfect software to experiment such a plugin.","title":"The choice of SAOImage DS9"},{"location":"philosophy/#discussion-and-conclusion","text":"In this chapter, I tried to stress the need for astronomical image processing applications. I emphasize the different requirements of such an application and explain why Python extensions for already proven visualization software represent an exciting approach to address this need. Based on this, I introduced pyds9plugin , a scientific project I developed to illustrate this approach. This plugin has been developed from the ground up, paying attention to three particular aspects: addressing the need for image processing, enhancing the interaction between the user and the data, and catalyzing collaboration for processing functions. Writing DS9 plugins is an excellent way to develop data analysis pipelines and quality assurance tasks by leveraging the combination of the very efficient DS9 application and the burgeoning number of open-source astronomical Python modules. pyds9plugin gathers a glimpse of all possibilities offered by DS9 and stays, for now, a test bench to present such an approach. Even though it still has a considerable number of challenges to face: convince the future users, converge towards research-grade processing, scalability to larger datasets, etc., this chapter shows the ease of such an approach and its numerous benefits. Therefore, implementing processing codes this way generates a pretty high return on investment.","title":"Discussion and conclusion"},{"location":"user/","text":"Tutorials The plugin incorporates four tutorials to help the user understand how it works and guide him step by step throughout all the functions via specific test cases. They are accessible via DS9 menus. Analysis -> Quick look plugin -> Give it a go . The four tutorials are: General purpose : Change display parameters, plot region in 3D, create header catalog, filtering & organizing images Photometric analysis : Centering, Aperture Photometry, SExtractor Image quality assessment : Fit Gaussian 2D, Radial and Energy profile, Throughfocus, Lock/Unlock frames Image processing : Interactive 1D fitting on plot, Execute Python command The help is also available directly from the Analysis -> Quick look plugin -> Help","title":"Tutorials"},{"location":"user/#tutorials","text":"The plugin incorporates four tutorials to help the user understand how it works and guide him step by step throughout all the functions via specific test cases. They are accessible via DS9 menus. Analysis -> Quick look plugin -> Give it a go . The four tutorials are: General purpose : Change display parameters, plot region in 3D, create header catalog, filtering & organizing images Photometric analysis : Centering, Aperture Photometry, SExtractor Image quality assessment : Fit Gaussian 2D, Radial and Energy profile, Throughfocus, Lock/Unlock frames Image processing : Interactive 1D fitting on plot, Execute Python command The help is also available directly from the Analysis -> Quick look plugin -> Help","title":"Tutorials"},{"location":"videos/","text":"","title":"Videos"},{"location":"videos_generic/","text":"Explore image Python interpreter Interactive fitting Python macros Cosmological tool Create header database Filter images 3D image visualization 3D cube visualization Access through command line","title":"Generic"},{"location":"videos_generic/#explore-image","text":"","title":"Explore image"},{"location":"videos_generic/#python-interpreter","text":"","title":"Python interpreter"},{"location":"videos_generic/#interactive-fitting","text":"","title":"Interactive fitting"},{"location":"videos_generic/#python-macros","text":"","title":"Python macros"},{"location":"videos_generic/#cosmological-tool","text":"","title":"Cosmological tool"},{"location":"videos_generic/#create-header-database","text":"","title":"Create header database"},{"location":"videos_generic/#filter-images","text":"","title":"Filter images"},{"location":"videos_generic/#3d-image-visualization","text":"","title":"3D image visualization"},{"location":"videos_generic/#3d-cube-visualization","text":"","title":"3D cube visualization"},{"location":"videos_generic/#access-through-command-line","text":"","title":"Access through command line"},{"location":"videos_instru/","text":"Throughfocus analysis Radial profile 2D gaussian fitting Interactive fitting Python macros Create header database Explore image","title":"Instrumentation"},{"location":"videos_instru/#throughfocus-analysis","text":"","title":"Throughfocus analysis"},{"location":"videos_instru/#radial-profile","text":"","title":"Radial profile"},{"location":"videos_instru/#2d-gaussian-fitting","text":"","title":"2D gaussian fitting"},{"location":"videos_instru/#interactive-fitting","text":"","title":"Interactive fitting"},{"location":"videos_instru/#python-macros","text":"","title":"Python macros"},{"location":"videos_instru/#create-header-database","text":"","title":"Create header database"},{"location":"videos_instru/#explore-image","text":"","title":"Explore image"},{"location":"videos_multi/","text":"Multi image source extraction Python interpreter Python macros Multi image analysis Access through command line","title":"Multi-image processing"},{"location":"videos_multi/#multi-image-source-extraction","text":"","title":"Multi image source extraction"},{"location":"videos_multi/#python-interpreter","text":"","title":"Python interpreter"},{"location":"videos_multi/#python-macros","text":"","title":"Python macros"},{"location":"videos_multi/#multi-image-analysis","text":"","title":"Multi image analysis"},{"location":"videos_multi/#access-through-command-line","text":"","title":"Access through command line"},{"location":"videos_soft/","text":"Multi image source extraction Source extraction Cosmological tool STIFF Astrometry","title":"Software"},{"location":"videos_soft/#multi-image-source-extraction","text":"","title":"Multi image source extraction"},{"location":"videos_soft/#source-extraction","text":"","title":"Source extraction"},{"location":"videos_soft/#cosmological-tool","text":"","title":"Cosmological tool"},{"location":"videos_soft/#stiff","text":"","title":"STIFF"},{"location":"videos_soft/#astrometry","text":"","title":"Astrometry"}]}